{
  "hash": "4407f7e7b311fc65e32579c1073b9d58",
  "result": {
    "markdown": "---\ntitle: \"{{< meta ct_title >}}\"\nsubtitle: \"{{< meta subtitle_seurat >}}\"\ndescription: \"{{< meta ct_description >}}\"\nformat: html\n---\n\n\n::: {.callout-note}\nCode chunks run R commands unless otherwise specified.\n:::\n\n\n{{< meta ct_1 >}}\n\n\n{{< meta ct_2 >}}\n\n\n\n## {{< meta ct_read >}}\n\n\n{{< meta ct_read_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsuppressPackageStartupMessages({\n  library(Seurat)\n  library(dplyr)\n  library(cowplot)\n  library(ggplot2)\n  library(pheatmap)\n  library(rafalib)\n  # remotes::install_github(\"powellgenomicslab/scPred\")\n  library(scPred)\n})\n```\n:::\n\n{{< meta ct_read_2 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#load the data and select 'ctrl_13` sample\nalldata <- readRDS(\"data/results/covid_qc_dr_int_cl.rds\")\n```\n:::\n\n{{< meta ct_read_3 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nctrl = alldata[, alldata$orig.ident == 'ctrl_13']\n\n# set active assay to RNA and remove the CCA assay\nctrl@active.assay = 'RNA' \nctrl[['CCA']] = NULL\nctrl\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAn object of class Seurat \n18121 features across 1139 samples within 1 assay \nActive assay: RNA (18121 features, 0 variable features)\n 6 dimensional reductions calculated: umap, tsne, harmony, umap_harmony, scanorama, umap_scanorama\n```\n:::\n:::\n\n\n## {{< meta ct_ref >}}\n\n\n{{< meta ct_ref_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreference <- scPred::pbmc_1\nreference\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAn object of class Seurat \n32838 features across 3500 samples within 1 assay \nActive assay: RNA (32838 features, 0 variable features)\n```\n:::\n:::\n\n{{< meta ct_ref_2 >}}\n\n\n\nHere, we will run all the steps that we did in previous labs in one go using the `magittr` package with the pipe-operator `%>%`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreference <- reference %>%\n  NormalizeData() %>%\n  FindVariableFeatures() %>%\n  ScaleData() %>%\n  RunPCA(verbose = F) %>%\n  RunUMAP(dims = 1:30)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nDimPlot(reference, group.by = \"cell_type\", label = TRUE, repel = TRUE) + NoAxes()\n```\n\n::: {.cell-output-display}\n![](seurat_06_celltyping_files/figure-html/unnamed-chunk-6-1.png){width=576}\n:::\n:::\n\n{{< meta ct_ref_3 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Set the identity as louvain with resolution 0.3\nctrl <- SetIdent(ctrl, value = \"CCA_snn_res.0.5\")\n  \nctrl <- ctrl %>%\n  NormalizeData() %>%\n  FindVariableFeatures() %>%\n  ScaleData() %>%\n  RunPCA(verbose = F) %>%\n  RunUMAP(dims = 1:30)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nDimPlot(ctrl,  label = TRUE, repel = TRUE) + NoAxes()\n```\n\n::: {.cell-output-display}\n![](seurat_06_celltyping_files/figure-html/unnamed-chunk-8-1.png){width=576}\n:::\n:::\n\n\n## Label transfer\n\nFirst we will run label transfer using a similar method as in the integration exercise. But, instad of CCA the default for the 'FindTransferAnchors` function is to use \"pcaproject\", e.g. the query dataset is projected onto the PCA of the reference dataset. Then, the labels of the reference data are predicted.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntransfer.anchors <- FindTransferAnchors(reference = reference, query = ctrl, \n    dims = 1:30)\npredictions <- TransferData(anchorset = transfer.anchors, refdata = reference$cell_type, \n    dims = 1:30)\nctrl <- AddMetaData(object = ctrl, metadata = predictions)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nDimPlot(ctrl, group.by = \"predicted.id\", label = T, repel = T) + NoAxes()\n```\n\n::: {.cell-output-display}\n![](seurat_06_celltyping_files/figure-html/unnamed-chunk-10-1.png){width=576}\n:::\n:::\n\n\nNow plot how many cells of each celltypes can be found in each cluster.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(ctrl@meta.data, aes(x=CCA_snn_res.0.5, fill = predicted.id)) + geom_bar() + theme_classic()\n```\n\n::: {.cell-output-display}\n![](seurat_06_celltyping_files/figure-html/unnamed-chunk-11-1.png){width=576}\n:::\n:::\n\n\n## {{< meta ct_scpred >}}\n\n\n{{< meta ct_scpred_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreference <- getFeatureSpace(reference, \"cell_type\")\nreference <- trainModel(reference)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n●  Extracting feature space for each cell type...\nDONE!\n●  Training models for each cell type...\nmaximum number of iterations reached 0.0001152056 -0.0001143117DONE!\n```\n:::\n:::\n\n{{< meta ct_scpred_2 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_scpred(reference)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'scPred' object\n✔  Prediction variable = cell_type \n✔  Discriminant features per cell type\n✔  Training model(s)\nSummary\n\n|Cell type   |    n| Features|Method    |   ROC|  Sens|  Spec|\n|:-----------|----:|--------:|:---------|-----:|-----:|-----:|\n|B cell      |  280|       50|svmRadial | 1.000| 0.964| 1.000|\n|CD4 T cell  | 1620|       50|svmRadial | 0.997| 0.972| 0.975|\n|CD8 T cell  |  945|       50|svmRadial | 0.985| 0.899| 0.978|\n|cDC         |   26|       50|svmRadial | 0.995| 0.547| 1.000|\n|cMono       |  212|       50|svmRadial | 0.994| 0.958| 0.970|\n|ncMono      |   79|       50|svmRadial | 0.998| 0.570| 1.000|\n|NK cell     |  312|       50|svmRadial | 0.999| 0.933| 0.996|\n|pDC         |   20|       50|svmRadial | 1.000| 0.700| 1.000|\n|Plasma cell |    6|       50|svmRadial | 1.000| 0.800| 1.000|\n```\n:::\n:::\n\n{{< meta ct_scpred_3 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nctrl <- scPredict(ctrl, reference)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n●  Matching reference with new dataset...\n\t ─ 2000 features present in reference loadings\n\t ─ 1774 features shared between reference and new dataset\n\t ─ 88.7% of features in the reference are present in new dataset\n●  Aligning new data to reference...\n●  Classifying cells...\nDONE!\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nDimPlot(ctrl, group.by = \"scpred_prediction\", label = T, repel = T) + NoAxes()\n```\n\n::: {.cell-output-display}\n![](seurat_06_celltyping_files/figure-html/unnamed-chunk-15-1.png){width=576}\n:::\n:::\n\n{{< meta ct_scpred_4 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(ctrl@meta.data, aes(x=CCA_snn_res.0.5, fill = scpred_prediction)) + geom_bar() + theme_classic()\n```\n\n::: {.cell-output-display}\n![](seurat_06_celltyping_files/figure-html/unnamed-chunk-16-1.png){width=576}\n:::\n:::\n\n\n## {{< meta ct_compare >}}\n\n\n{{< meta ct_compare_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncrossTab(ctrl, \"predicted.id\", \"scpred_prediction\")\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|            | B cell| CD4 T cell| CD8 T cell| cDC| cMono| ncMono| NK cell| pDC| Plasma cell|\n|:-----------|------:|----------:|----------:|---:|-----:|------:|-------:|---:|-----------:|\n|B cell      |    103|          1|          2|   0|     2|      0|       0|   0|           0|\n|CD4 T cell  |      0|        200|          1|   0|     0|      0|       0|   0|           0|\n|CD8 T cell  |      0|          6|        225|   0|     1|      0|       5|   0|           0|\n|cDC         |      0|          0|          0|  16|     8|      0|       0|   0|           0|\n|cMono       |      0|          6|          2|   0|   198|      4|       0|   0|           0|\n|ncMono      |      0|          0|          0|   0|     8|    101|       0|   0|           0|\n|NK cell     |      0|          0|         12|   0|     0|      0|     153|   0|           0|\n|pDC         |      0|          0|          0|   1|     0|      0|       0|   1|           0|\n|Plasma cell |      0|          1|          0|   0|     0|      0|       0|   0|           2|\n|unassigned  |      0|         11|         12|   0|    55|      2|       0|   0|           0|\n\n</div>\n:::\n:::\n\n\n## {{< meta ct_gsea >}}\n\n\n{{< meta ct_gsea_1 >}}\n\n\n\n### {{< meta ct_gsea_deg >}}\n\n\n{{< meta ct_gsea_deg_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# run differential expression in our dataset, using clustering at resolution 0.5\nalldata <- SetIdent(alldata,value = \"CCA_snn_res.0.5\")\nDGE_table <- FindAllMarkers(\n  alldata,\n  logfc.threshold = 0,\n  test.use = \"wilcox\",\n  min.pct = 0.1,\n  min.diff.pct = 0,\n  only.pos = TRUE,\n  max.cells.per.ident = 20,\n  return.thresh = 1,\n  assay = \"RNA\"\n)\n\n# split into a list\nDGE_list <- split(DGE_table, DGE_table$cluster)\n\nunlist(lapply(DGE_list, nrow))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   0    1    2    3    4    5    6    7    8    9 \n3166 3314 2499 4072 2556 2036 3861 2218 2479 3343 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Compute differential gene expression in reference dataset (that has cell annotation)\nreference <- SetIdent( reference, value = \"cell_type\")\nreference_markers <- FindAllMarkers(\n  reference ,\n  min.pct = .1 , \n  min.diff.pct = .2,\n  only.pos = T, \n  max.cells.per.ident = 20 ,\n  return.thresh = 1 \n)\n\n# Identify the top cell marker genes in reference dataset\n# select top 50 with hihgest foldchange among top 100 signifcant genes.\nreference_markers <- reference_markers [ order(reference_markers$avg_log2FC,decreasing = T), ]\nreference_markers %>% \n  group_by(cluster) %>% \n  top_n(-100, p_val) %>% \n  top_n(50, avg_log2FC) -> top50_cell_selection\n\n# Transform the markers into a list\nref_list = split(top50_cell_selection$gene, top50_cell_selection$cluster)\n\nunlist(lapply(ref_list, length))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n CD8 T cell  CD4 T cell       cMono      B cell     NK cell         pDC \n         30          15          50          50          50          50 \n     ncMono         cDC Plasma cell \n         50          50          50 \n```\n:::\n:::\n\n{{< meta ct_gsea_deg_2 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsuppressPackageStartupMessages(library(fgsea))\n\n# run fgsea for each of the clusters in the list\nres <- lapply(DGE_list, function(x){\n  gene_rank <- setNames(x$avg_log2FC, x$gene)\n  fgseaRes <- fgsea( pathways=ref_list, stats=gene_rank,nperm=10000)\n  return(fgseaRes)\n})\nnames(res) <- names(DGE_list)\n\n# You can filter and resort the table based on ES, NES or pvalue\nres <- lapply(res, function(x) {x[ x$pval < 0.1 , ]} )\nres <- lapply(res, function(x) {x[ x$size > 2 , ]} )\nres <- lapply(res, function(x) {x[order(x$NES,decreasing = T), ]} )\nres\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$`0`\n   pathway        pval        padj        ES      NES nMoreExtreme size\n1:   cMono 0.000099990 0.000299970 0.9604823 2.082162            0   48\n2:  ncMono 0.000099990 0.000299970 0.8400708 1.817122            0   46\n3:     cDC 0.000099990 0.000299970 0.8137532 1.753954            0   43\n4:     pDC 0.001002506 0.002255639 0.7623781 1.564625            9   21\n5:  B cell 0.007857359 0.014143246 0.7385015 1.483444           77   16\n6: NK cell 0.016469377 0.024704066 0.7615592 1.466565          159   11\n                                    leadingEdge\n1:      S100A8,S100A9,LYZ,S100A12,VCAN,FCN1,...\n2:     CTSS,TYMP,CST3,S100A11,AIF1,SERPINA1,...\n3:              LYZ,GRN,TYMP,CST3,AIF1,SPI1,...\n4:         GRN,MS4A6A,CST3,MPEG1,CTSB,TGFBI,...\n5: NCF1,LY86,MARCH1,HLA-DRB5,POU2F2,PHACTR1,...\n6:       TYROBP,FCER1G,SRGN,CCL3,CD63,MYO1F,...\n\n$`1`\n       pathway         pval         padj        ES      NES nMoreExtreme size\n1:  CD8 T cell 0.0001000901 0.0003503153 0.9472460 2.204879            0   29\n2:     NK cell 0.0001000400 0.0003503153 0.8485185 1.988182            0   32\n3:  CD4 T cell 0.0015444015 0.0036036036 0.8753374 1.705631           13    7\n4: Plasma cell 0.0866606625 0.1172265547 0.5478953 1.278696          865   30\n                                  leadingEdge\n1:          CD8A,CD3D,GZMH,CCL5,CD3G,CD8B,...\n2:          CCL5,NKG7,GZMA,GZMM,CST7,CCL4,...\n3:                CD3D,CD3G,CD3E,IL7R,PIK3IP1\n4: FKBP11,PRDM1,PEBP1,SEC11C,PPIB,SELENOS,...\n\n$`2`\n       pathway         pval        padj        ES      NES nMoreExtreme size\n1:      B cell 0.0001000000 0.000800000 0.8988279 2.015474            0   46\n2:         cDC 0.0003053746 0.001221498 0.8772318 1.797614            2   14\n3:         pDC 0.0011067512 0.002951336 0.7753617 1.628458           10   18\n4: Plasma cell 0.0835030550 0.118339040 0.7150909 1.361282          778    8\n5:      ncMono 0.0887542797 0.118339040 0.8425481 1.344170          673    3\n                                            leadingEdge\n1:      CD79A,TCL1A,LINC00926,MS4A1,CD79B,TNFRSF13C,...\n2: CD74,HLA-DQB1,HLA-DRA,HLA-DPB1,HLA-DRB1,HLA-DQA1,...\n3:               CD74,TCF4,BCL11A,IRF8,HERPUD1,SPIB,...\n4:                PLPP5,ISG20,HERPUD1,MZB1,ITM2C,JCHAIN\n5:                                  HLA-DPA1,POU2F2,LYN\n\n$`3`\n       pathway         pval         padj        ES      NES nMoreExtreme size\n1:     NK cell 0.0001000000 0.0004019697 0.9400385 2.445529            0   50\n2:  CD8 T cell 0.0001004924 0.0004019697 0.9179690 2.251090            0   24\n3:         pDC 0.0006280750 0.0016748665 0.8051689 1.784358            5   11\n4:      ncMono 0.0197270329 0.0394540658 0.7970971 1.570700          171    6\n5: Plasma cell 0.0248422318 0.0397475709 0.5710832 1.429502          247   30\n                                  leadingEdge\n1:         SPON2,PRF1,GNLY,GZMB,CD7,CLIC3,...\n2:        PRF1,GNLY,GZMB,CTSW,NKG7,FGFBP2,...\n3:  GZMB,PLAC8,C12orf75,RRBP1,ALOX5AP,HSP90B1\n4:                    FCGR3A,IFITM2,RHOC,HES4\n5: CD38,FKBP11,SLAMF7,HSP90B1,SDF2L1,PPIB,...\n\n$`4`\n   pathway       pval      padj        ES      NES nMoreExtreme size\n1:  B cell 0.03324453 0.1496004 0.8571390 1.470997          286    5\n2:  ncMono 0.01910191 0.1496004 0.6490433 1.366874          190   35\n                                leadingEdge\n1:                PDLIM1,HLA-DRB5,STX7,NCF1\n2: OAZ1,TIMP1,FKBP1A,CST3,IFITM3,FCER1G,...\n\n$`5`\n      pathway         pval         padj        ES      NES nMoreExtreme size\n1: CD4 T cell 0.0001016984 0.0007118885 0.9134477 1.799050            0   14\n2: CD8 T cell 0.0014178209 0.0049623732 0.8957908 1.612853           12    7\n                         leadingEdge\n1: IL7R,LTB,LDHB,RCAN3,NOSIP,MAL,...\n2:      IL32,CD3D,CD3E,CD2,CD3G,CD8B\n\n$`6`\n       pathway         pval         padj        ES      NES nMoreExtreme size\n1:     NK cell 0.0001000000 0.0004010829 0.9241341 2.407067            0   45\n2:  CD8 T cell 0.0001002707 0.0004010829 0.9155580 2.278493            0   27\n3:      ncMono 0.0029816514 0.0079510703 0.8599246 1.697683           25    6\n4:         pDC 0.0243642941 0.0487285881 0.7067908 1.543200          228   10\n5:  CD4 T cell 0.0422912206 0.0676659529 0.8575282 1.445832          315    3\n6: Plasma cell 0.0991694186 0.1322258915 0.5055153 1.281763          990   32\n                                  leadingEdge\n1:        FGFBP2,GNLY,NKG7,CST7,GZMB,CTSW,...\n2:        FGFBP2,GNLY,NKG7,CST7,GZMB,CTSW,...\n3:                         FCGR3A,IFITM2,RHOC\n4:  GZMB,C12orf75,HSP90B1,ALOX5AP,PLAC8,RRBP1\n5:                                  CD3E,CD3D\n6: PRDM1,FKBP11,HSP90B1,PPIB,SPCS2,SLAMF7,...\n\n$`7`\n      pathway         pval         padj        ES      NES nMoreExtreme size\n1: CD4 T cell 0.0001016467 0.0006098801 0.9187840 1.953882            0   14\n2: CD8 T cell 0.0744383728 0.1488767456 0.7949413 1.357119          612    4\n                            leadingEdge\n1: IL7R,TCF7,LTB,TSHZ2,PIK3IP1,LEF1,...\n2:                   CD3E,CD3G,CD3D,CD2\n\n$`8`\n       pathway         pval        padj        ES      NES nMoreExtreme size\n1:      B cell 0.0000999900 0.000304909 0.8990233 1.910958            0   45\n2:         cDC 0.0001016363 0.000304909 0.8963109 1.763319            0   14\n3:         pDC 0.0001011122 0.000304909 0.8409385 1.676958            0   16\n4: Plasma cell 0.0010163635 0.002286818 0.8262721 1.625531            9   14\n5:      ncMono 0.0046046573 0.008288383 0.9587620 1.511378           34    3\n                                            leadingEdge\n1:        CD79A,MS4A1,BANK1,CD74,TNFRSF13C,HLA-DQA1,...\n2: CD74,HLA-DQA1,HLA-DRA,HLA-DPB1,HLA-DQB1,HLA-DPA1,...\n3:             CD74,JCHAIN,SPIB,HERPUD1,TCF4,CCDC50,...\n4:                JCHAIN,HERPUD1,ISG20,ITM2C,MZB1,PEBP1\n5:                                      HLA-DPA1,POU2F2\n\n$`9`\n   pathway        pval         padj        ES      NES nMoreExtreme size\n1:  ncMono 0.000099990 0.0002666933 0.9569912 2.036762            0   49\n2:   cMono 0.000100010 0.0002666933 0.8930249 1.861037            0   33\n3:     cDC 0.000100000 0.0002666933 0.8435239 1.767796            0   37\n4: NK cell 0.006547315 0.0130946292 0.7881824 1.522179           63   12\n5:  B cell 0.031278378 0.0500454041 0.6998417 1.386118          309   16\n6:     pDC 0.054854026 0.0731387009 0.6815870 1.342377          542   15\n                                              leadingEdge\n1:                CDKN1C,LST1,FCGR3A,COTL1,AIF1,MS4A7,...\n2:               LST1,COTL1,AIF1,SERPINA1,FCER1G,PSAP,...\n3:                   LST1,COTL1,AIF1,FCER1G,SPI1,CST3,...\n4:             FCGR3A,RHOC,FCER1G,TYROBP,IFITM2,MYO1F,...\n5: HLA-DPA1,POU2F2,HLA-DRB5,HLA-DPB1,HLA-DRA,HLA-DRB1,...\n6:                    CST3,NPC2,PLD4,MPEG1,TGFBI,CTSB,...\n```\n:::\n:::\n\n{{< meta ct_gsea_deg_3 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnew.cluster.ids <- unlist(lapply(res,function(x){as.data.frame(x)[1,1]}))\n\nalldata$ref_gsea <- new.cluster.ids[as.character(alldata@active.ident)]\n\ncowplot::plot_grid( ncol = 2,\nDimPlot(alldata,label = T,group.by = \"CCA_snn_res.0.5\") + NoAxes(),\nDimPlot(alldata,label = T, group.by = \"ref_gsea\") + NoAxes())\n```\n\n::: {.cell-output-display}\n![](seurat_06_celltyping_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n{{< meta ct_gsea_deg_4 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nctrl$ref_gsea = alldata$ref_gsea[alldata$orig.ident == \"ctrl_13\"]\n\ncowplot::plot_grid( ncol = 3,\nDimPlot(ctrl,label = T,group.by = \"ref_gsea\") + NoAxes() + ggtitle(\"GSEA\"),\nDimPlot(ctrl,label = T, group.by = \"predicted.id\") + NoAxes() + ggtitle(\"LabelTransfer\"),\nDimPlot(ctrl,label = T, group.by = \"scpred_prediction\") + NoAxes() + ggtitle(\"scPred\")\n)\n```\n\n::: {.cell-output-display}\n![](seurat_06_celltyping_files/figure-html/unnamed-chunk-22-1.png){width=1536}\n:::\n:::\n\n\n### {{< meta ct_gsea_annot >}}\n\n\n{{< meta ct_gsea_annot_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the human marker table\nmarkers <- read.delim(\"data/cellmarker/Human_cell_markers.txt\")\nmarkers <- markers [ markers$speciesType == \"Human\", ]\nmarkers <- markers [ markers$cancerType == \"Normal\", ]\n\n#Filter by tissue (to reduce computational time and have tissue-specific classification)\nsort(unique(markers$tissueType))\ngrep(\"blood\",unique(markers$tissueType),value = T)\nmarkers <- markers [ markers$tissueType %in% c(\"Blood\",\"Venous blood\",\n                                                \"Serum\",\"Plasma\",\n                                                \"Spleen\",\"Bone marrow\",\"Lymph node\"), ]\n\n# remove strange characters etc.\ncelltype_list <- lapply( unique(markers$cellName) , function(x){\n  x <- paste(markers$geneSymbol[markers$cellName == x],sep=\",\")\n  x <- gsub(\"[[]|[]]| |-\",\",\",x)\n  x <- unlist(strsplit( x , split = \",\"))\n  x <- unique(x [ ! x %in% c(\"\",\"NA\",\"family\") ])\n  x <- casefold(x,upper = T)\n})\nnames(celltype_list) <- unique(markers$cellName)\n# celltype_list <- lapply(celltype_list , function(x) {x[1:min(length(x),50)]} )\ncelltype_list <- celltype_list[ unlist(lapply(celltype_list,length)) < 100 ]\ncelltype_list <- celltype_list[ unlist(lapply(celltype_list,length)) > 5 ]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] \"Abdominal adipose tissue\"       \"Adipose tissue\"                \n  [3] \"Adrenal gland\"                  \"Adventitia\"                    \n  [5] \"Airway epithelium\"              \"Alveolus\"                      \n  [7] \"Amniotic fluid\"                 \"Amniotic membrane\"             \n  [9] \"Antecubital vein\"               \"Anterior cruciate ligament\"    \n [11] \"Artery\"                         \"Ascites\"                       \n [13] \"Bladder\"                        \"Blood\"                         \n [15] \"Blood vessel\"                   \"Bone\"                          \n [17] \"Bone marrow\"                    \"Brain\"                         \n [19] \"Breast\"                         \"Bronchoalveolar system\"        \n [21] \"Brown adipose tissue\"           \"Cartilage\"                     \n [23] \"Chorionic villus\"               \"Colon\"                         \n [25] \"Colorectum\"                     \"Cornea\"                        \n [27] \"Corneal endothelium\"            \"Corneal epithelium\"            \n [29] \"Corpus luteum\"                  \"Decidua\"                       \n [31] \"Deciduous tooth\"                \"Dental pulp\"                   \n [33] \"Dermis\"                         \"Dorsolateral prefrontal cortex\"\n [35] \"Duodenum\"                       \"Embryo\"                        \n [37] \"Embryoid body\"                  \"Embryonic brain\"               \n [39] \"Embryonic prefrontal cortex\"    \"Embryonic stem cell\"           \n [41] \"Endometrium\"                    \"Endometrium stroma\"            \n [43] \"Epithelium\"                     \"Esophagus\"                     \n [45] \"Eye\"                            \"Fat pad\"                       \n [47] \"Fetal brain\"                    \"Fetal gonad\"                   \n [49] \"Fetal kidney\"                   \"Fetal liver\"                   \n [51] \"Fetal pancreas\"                 \"Foreskin\"                      \n [53] \"Gastric corpus\"                 \"Gastric epithelium\"            \n [55] \"Gastric gland\"                  \"Gastrointestinal tract\"        \n [57] \"Germ\"                           \"Gingiva\"                       \n [59] \"Gonad\"                          \"Gut\"                           \n [61] \"Hair follicle\"                  \"Heart\"                         \n [63] \"Hippocampus\"                    \"Inferior colliculus\"           \n [65] \"Intervertebral disc\"            \"Intestinal crypt\"              \n [67] \"Intestine\"                      \"Jejunum\"                       \n [69] \"Kidney\"                         \"Lacrimal gland\"                \n [71] \"Large intestine\"                \"Laryngeal squamous epithelium\" \n [73] \"Ligament\"                       \"Limbal epithelium\"             \n [75] \"Liver\"                          \"Lung\"                          \n [77] \"Lymph\"                          \"Lymph node\"                    \n [79] \"Lymphoid tissue\"                \"Mammary epithelium\"            \n [81] \"Meniscus\"                       \"Midbrain\"                      \n [83] \"Molar\"                          \"Muscle\"                        \n [85] \"Myocardium\"                     \"Myometrium\"                    \n [87] \"Nasal concha\"                   \"Nasal epithelium\"              \n [89] \"Nerve\"                          \"Nucleus pulposus\"              \n [91] \"Optic nerve\"                    \"Oral mucosa\"                   \n [93] \"Osteoarthritic cartilage\"       \"Ovarian cortex\"                \n [95] \"Ovarian follicle\"               \"Ovary\"                         \n [97] \"Oviduct\"                        \"Pancreas\"                      \n [99] \"Pancreatic acinar tissue\"       \"Pancreatic islet\"              \n[101] \"Periodontal ligament\"           \"Periosteum\"                    \n[103] \"Peripheral blood\"               \"Placenta\"                      \n[105] \"Plasma\"                         \"Pluripotent stem cell\"         \n[107] \"Premolar\"                       \"Primitive streak\"              \n[109] \"Prostate\"                       \"Pyloric gland\"                 \n[111] \"Rectum\"                         \"Renal glomerulus\"              \n[113] \"Retina\"                         \"Retinal pigment epithelium\"    \n[115] \"Salivary gland\"                 \"Scalp\"                         \n[117] \"Sclerocorneal tissue\"           \"Seminal plasma\"                \n[119] \"Serum\"                          \"Sinonasal mucosa\"              \n[121] \"Skeletal muscle\"                \"Skin\"                          \n[123] \"Small intestinal crypt\"         \"Small intestine\"               \n[125] \"Spinal cord\"                    \"Spleen\"                        \n[127] \"Splenic red pulp\"               \"Sputum\"                        \n[129] \"Stomach\"                        \"Subcutaneous adipose tissue\"   \n[131] \"Submandibular gland\"            \"Sympathetic ganglion\"          \n[133] \"Synovial fluid\"                 \"Synovium\"                      \n[135] \"Tendon\"                         \"Testis\"                        \n[137] \"Thymus\"                         \"Thyroid\"                       \n[139] \"Tonsil\"                         \"Tooth\"                         \n[141] \"Umbilical cord\"                 \"Umbilical cord blood\"          \n[143] \"Umbilical vein\"                 \"Undefined\"                     \n[145] \"Urine\"                          \"Uterus\"                        \n[147] \"Vagina\"                         \"Venous blood\"                  \n[149] \"Visceral adipose tissue\"        \"Vocal fold\"                    \n[151] \"Whartons jelly\"                 \"White adipose tissue\"          \n[1] \"Peripheral blood\"     \"Umbilical cord blood\" \"Venous blood\"        \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# run fgsea for each of the clusters in the list\nres <- lapply(DGE_list, function(x){\n  gene_rank <- setNames(x$avg_log2FC, x$gene)\n  fgseaRes <- fgsea( pathways=celltype_list, stats=gene_rank,nperm=10000)\n  return(fgseaRes)\n})\nnames(res) <- names(DGE_list)\n\n# You can filter and resort the table based on ES, NES or pvalue\nres <- lapply(res, function(x) {x[ x$pval < 0.01 , ]} )\nres <- lapply(res, function(x) {x[ x$size > 5 , ]} )\nres <- lapply(res, function(x) {x[order(x$NES,decreasing = T), ]} )\n\n# show top 3 for each cluster.\nlapply(res,head,3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$`0`\n                    pathway         pval        padj        ES      NES\n1:               Neutrophil 0.0002024496 0.003542869 0.8523815 1.711647\n2:   CD1C+_B dendritic cell 0.0000999900 0.003499650 0.7860707 1.711588\n3: Mesenchymal stromal cell 0.0033194132 0.029044866 0.8633935 1.609837\n   nMoreExtreme size                             leadingEdge\n1:            1   15 CD14,CSF3R,JAML,C5AR1,FCGR2A,FCGR1A,...\n2:            0   49 S100A8,S100A9,LYZ,S100A12,VCAN,FCN1,...\n3:           30    8              CD14,VIM,ANPEP,CD44,PECAM1\n\n$`1`\n                    pathway         pval        padj        ES      NES\n1:                   T cell 0.0001105217 0.000793454 0.9634109 1.880733\n2:             Myeloid cell 0.0001021868 0.000793454 0.8522776 1.852164\n3: Mesenchymal stromal cell 0.0038588128 0.012348201 0.8709271 1.649822\n   nMoreExtreme size                        leadingEdge\n1:            0    7    CD8A,CD3D,CD3G,CD3E,CD2,CD5,...\n2:            0   14 CD3D,CD3G,CD3E,CD81,PTPRC,CD84,...\n3:           33    6               CD81,B2M,PTPRC,ITGB1\n\n$`2`\n   pathway         pval        padj        ES      NES nMoreExtreme size\n1:  B cell 0.0001029866 0.002780639 0.9047629 1.801854            0   11\n                            leadingEdge\n1: CD79A,MS4A1,FCER2,PAX5,CD24,CD19,...\n\n$`3`\n                       pathway         pval        padj        ES      NES\n1:      CD1C+_A dendritic cell 0.0002217295 0.005127494 0.9084688 1.849273\n2:         Natural killer cell 0.0005543237 0.005127494 0.8964502 1.824808\n3: AXL+SIGLEC6+ dendritic cell 0.0004023335 0.005127494 0.7337906 1.776492\n   nMoreExtreme size                                leadingEdge\n1:            1    7                    AREG,LPCAT1,ADAM8,NR4A2\n2:            4    7              KLRD1,FCGR3A,KLRC1,NCAM1,NCR1\n3:            3   22 PTGDS,CTSW,BHLHE40,TSEN54,CX3CR1,PLAC8,...\n\n$`4`\nEmpty data.table (0 rows and 8 cols): pathway,pval,padj,ES,NES,nMoreExtreme...\n\n$`5`\n   pathway         pval        padj        ES      NES nMoreExtreme size\n1:  T cell 0.0001093135 0.003060778 0.9460238 1.702717            0    7\n              leadingEdge\n1: CD3D,CD3E,CD2,CD5,CD3G\n\n$`6`\n               pathway         pval        padj        ES      NES nMoreExtreme\n1: Natural killer cell 0.0001092180 0.004041066 0.8961044 1.884108            0\n2:            Platelet 0.0007526072 0.009282156 0.8302022 1.783614            6\n3:        Myeloid cell 0.0007159660 0.009282156 0.7635915 1.778575            6\n   size                          leadingEdge\n1:    8 KLRD1,FCGR3A,CD3E,CD2,NCR1,NCAM1,...\n2:    9     CCL5,CD63,SPN,BSG,CD47,CD226,...\n3:   15 FCGR3A,CD3E,CD81,ZAP70,IL2RB,SPN,...\n\n$`7`\nEmpty data.table (0 rows and 8 cols): pathway,pval,padj,ES,NES,nMoreExtreme...\n\n$`8`\n   pathway        pval       padj        ES      NES nMoreExtreme size\n1:  B cell 0.001330332 0.03724928 0.8203607 1.610929           12   13\n                                  leadingEdge\n1: CD79A,MS4A1,POU2AF1,CD24,FCGR2B,POU2F2,...\n\n$`9`\n        pathway         pval       padj        ES      NES nMoreExtreme size\n1: Myeloid cell 0.0002004008 0.00741483 0.8081754 1.642042            1   22\n2:   Neutrophil 0.0032241290 0.03976426 0.8299506 1.566163           30   10\n                              leadingEdge\n1: FCGR3A,CSF1R,PECAM1,CD68,ITGAX,SPN,...\n2:       FCGR3A,PECAM1,ITGAX,C5AR1,FCGR2A\n```\n:::\n:::\n\n\n#CT_GSEA8:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnew.cluster.ids <- unlist(lapply(res,function(x){as.data.frame(x)[1,1]}))\nalldata$cellmarker_gsea <- new.cluster.ids[as.character(alldata@active.ident)]\n\ncowplot::plot_grid( ncol = 2,\nDimPlot(alldata,label = T,group.by = \"ref_gsea\") + NoAxes(),\nDimPlot(alldata,label = T, group.by = \"cellmarker_gsea\") + NoAxes()\n)\n```\n\n::: {.cell-output-display}\n![](seurat_06_celltyping_files/figure-html/unnamed-chunk-25-1.png){width=1056}\n:::\n:::\n\n\n:::{.callout-note title=\"Discuss\"}\n\n{{< meta ct_gsea_annot_2 >}}\n\n\n:::\n\n\n{{< meta ct_gsea_annot_3 >}}\n\n\n{{< meta ct_save >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveRDS(ctrl,\"data/results/ctrl13_qc_dr_int_cl_celltype.rds\")\n```\n:::\n\n\n## {{< meta session >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.2.3 (2023-03-15)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.2 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3\nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] fgsea_1.24.0       caret_6.0-94       lattice_0.20-45    scPred_1.9.2      \n [5] rafalib_1.0.0      pheatmap_1.0.12    ggplot2_3.4.2      cowplot_1.1.1     \n [9] dplyr_1.1.1        SeuratObject_4.1.3 Seurat_4.3.0.1    \n\nloaded via a namespace (and not attached):\n  [1] fastmatch_1.1-3        plyr_1.8.8             igraph_1.5.0          \n  [4] lazyeval_0.2.2         sp_2.0-0               splines_4.2.3         \n  [7] BiocParallel_1.32.6    listenv_0.9.0          scattermore_1.2       \n [10] digest_0.6.33          foreach_1.5.2          htmltools_0.5.5       \n [13] fansi_1.0.4            magrittr_2.0.3         tensor_1.5            \n [16] cluster_2.1.4          ROCR_1.0-11            limma_3.54.2          \n [19] recipes_1.0.6          globals_0.16.2         gower_1.0.1           \n [22] matrixStats_1.0.0      hardhat_1.3.0          timechange_0.2.0      \n [25] spatstat.sparse_3.0-2  colorspace_2.1-0       ggrepel_0.9.3         \n [28] xfun_0.39              crayon_1.5.2           jsonlite_1.8.7        \n [31] progressr_0.13.0       spatstat.data_3.0-1    survival_3.5-3        \n [34] zoo_1.8-12             iterators_1.0.14       glue_1.6.2            \n [37] polyclip_1.10-4        gtable_0.3.3           ipred_0.9-14          \n [40] leiden_0.4.3           kernlab_0.9-32         future.apply_1.11.0   \n [43] abind_1.4-5            scales_1.2.1           spatstat.random_3.1-5 \n [46] miniUI_0.1.1.1         Rcpp_1.0.10            viridisLite_0.4.2     \n [49] xtable_1.8-4           reticulate_1.30        stats4_4.2.3          \n [52] lava_1.7.2.1           prodlim_2023.03.31     htmlwidgets_1.6.2     \n [55] httr_1.4.6             RColorBrewer_1.1-3     ellipsis_0.3.2        \n [58] ica_1.0-3              pkgconfig_2.0.3        farver_2.1.1          \n [61] nnet_7.3-18            uwot_0.1.16            deldir_1.0-9          \n [64] utf8_1.2.3             tidyselect_1.2.0       labeling_0.4.2        \n [67] rlang_1.1.1            reshape2_1.4.4         later_1.3.1           \n [70] munsell_0.5.0          tools_4.2.3            cli_3.6.1             \n [73] generics_0.1.3         ggridges_0.5.4         evaluate_0.21         \n [76] stringr_1.5.0          fastmap_1.1.1          yaml_2.3.7            \n [79] goftest_1.2-3          ModelMetrics_1.2.2.2   knitr_1.43            \n [82] fitdistrplus_1.1-11    purrr_1.0.1            RANN_2.6.1            \n [85] pbapply_1.7-2          future_1.33.0          nlme_3.1-162          \n [88] mime_0.12              compiler_4.2.3         rstudioapi_0.14       \n [91] beeswarm_0.4.0         plotly_4.10.2          png_0.1-8             \n [94] spatstat.utils_3.0-3   tibble_3.2.1           stringi_1.7.12        \n [97] Matrix_1.6-0           vctrs_0.6.3            pillar_1.9.0          \n[100] lifecycle_1.0.3        spatstat.geom_3.2-1    lmtest_0.9-40         \n[103] RcppAnnoy_0.0.21       data.table_1.14.8      irlba_2.3.5.1         \n[106] httpuv_1.6.11          patchwork_1.1.2        R6_2.5.1              \n[109] promises_1.2.0.1       KernSmooth_2.23-20     gridExtra_2.3         \n[112] vipor_0.4.5            parallelly_1.36.0      codetools_0.2-19      \n[115] MASS_7.3-58.2          withr_2.5.0            sctransform_0.3.5     \n[118] harmony_0.1.1          parallel_4.2.3         grid_4.2.3            \n[121] rpart_4.1.19           timeDate_4022.108      tidyr_1.3.0           \n[124] class_7.3-21           rmarkdown_2.21         Rtsne_0.16            \n[127] spatstat.explore_3.2-1 pROC_1.18.5            shiny_1.7.4           \n[130] lubridate_1.9.2        ggbeeswarm_0.7.2      \n```\n:::\n:::\n",
    "supporting": [
      "seurat_06_celltyping_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}