{
  "hash": "80dac93f50302f35d7c4f7da0a342996",
  "result": {
    "markdown": "---\ntitle: \"{{< meta clust_title >}}\"\nsubtitle: \"{{< meta subtitle_seurat >}}\"\ndescription: \"{{< meta clust_description >}}\"\nformat: html\n---\n\n\n::: {.callout-note}\nCode chunks run R commands unless otherwise specified.\n:::\n\n\n{{< meta clust_1 >}}\n\n\n{{< meta clust_2 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsuppressPackageStartupMessages({\n  library(Seurat)\n  library(cowplot)\n  library(ggplot2)\n  library(pheatmap)\n  library(rafalib)\n  library(clustree)\n})\n\nalldata <- readRDS(\"data/results/covid_qc_dr_int.rds\")\n```\n:::\n\n\n## {{< meta clust_graphclust >}}\n\n\n{{< meta clust_graphclust_1 >}}\n\n\n\n### {{< meta clust_graphclust_knn >}}\n\n\n{{< meta clust_graphclust_knn_1 >}}\n\n\n\nAs we can see above, the **Seurat** function `FindNeighbors()` already computes both the KNN and SNN graphs, in which we can control the minimal percentage of shared neighbours to be kept. See `?FindNeighbors` for additional options.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# check if CCA is still the active assay\nalldata@active.assay\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"RNA\"\n```\n:::\n\n```{.r .cell-code}\n# set the correct assay.\nalldata@active.assay = \"CCA\"\n\nalldata <- FindNeighbors(alldata, dims = 1:30, k.param = 60, prune.SNN = 1/15)\n\n# check the names for graphs in the object.\nnames(alldata@graphs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"CCA_nn\"  \"CCA_snn\"\n```\n:::\n:::\n\n{{< meta clust_graphclust_knn_2 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npheatmap(alldata@graphs$CCA_nn[1:200,1:200],\n         col=c(\"white\",\"black\"),border_color = \"grey90\", main = \"KNN graph\",\n         legend = F,cluster_rows = F,cluster_cols = F,fontsize = 2)\n```\n\n::: {.cell-output-display}\n![](seurat_04_clustering_files/figure-html/unnamed-chunk-3-1.png){width=576}\n:::\n\n```{.r .cell-code}\npheatmap(alldata@graphs$CCA_snn[1:200,1:200],\n         col=colorRampPalette(c(\"white\",\"yellow\",\"red\"))(100), \n         border_color = \"grey90\", main = \"SNN graph\",\n         legend = F,cluster_rows = F,cluster_cols = F,fontsize = 2)\n```\n\n::: {.cell-output-display}\n![](seurat_04_clustering_files/figure-html/unnamed-chunk-3-2.png){width=576}\n:::\n:::\n\n\n### {{< meta clust_graphclust_graph >}}\n\n\n{{< meta clust_graphclust_graph_1 >}}\n\n\n\nIn **Seurat**, the function `FindClusters()` will do a graph-based clustering using \"Louvain\" algorithim by default (`algorithm = 1`). To use the leiden algorithm, you need to set it to `algorithm = 4`. See `?FindClusters` for additional options.\n\nBy default it will run clustering on the SNN graph we created in the previous step, but you can also specify different graphs for clustering with `graph.name`. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Clustering with louvain (algorithm 1) and a few different resolutions\nfor (res in c( 0.1 , 0.25 , .5 , 1 , 1.5 , 2 )){\n  alldata <- FindClusters(alldata, graph.name = \"CCA_snn\", resolution = res , algorithm = 1)\n}\n\n# each time you run clustering, the data is stored in meta data columns:\n# seurat_clusters - lastest results only\n# CCA_snn_res.XX - for each different resolution you test.\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_grid(ncol = 3,\n  DimPlot(alldata, reduction = \"umap\", group.by = \"CCA_snn_res.0.5\")+ggtitle(\"louvain_0.5\"),\n  DimPlot(alldata, reduction = \"umap\", group.by = \"CCA_snn_res.1\")+ggtitle(\"louvain_1\"),\n  DimPlot(alldata, reduction = \"umap\", group.by = \"CCA_snn_res.2\")+ggtitle(\"louvain_2\")\n)\n```\n\n::: {.cell-output-display}\n![](seurat_04_clustering_files/figure-html/unnamed-chunk-5-1.png){width=1152}\n:::\n:::\n\n{{< meta clust_graphclust_graph_2 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsuppressPackageStartupMessages(library(clustree))\nclustree(alldata@meta.data, prefix = \"CCA_snn_res.\")\n```\n\n::: {.cell-output-display}\n![](seurat_04_clustering_files/figure-html/unnamed-chunk-6-1.png){width=768}\n:::\n:::\n\n\n## {{< meta clust_kmean >}}\n\n\n{{< meta clust_kmean_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfor (k in c( 5 , 7 , 10 , 12 , 15 , 17 , 20)){\n  alldata@meta.data[,paste0(\"kmeans_\",k)] <- kmeans(x = alldata@reductions[[\"pca\"]]@cell.embeddings, centers = k,nstart = 100)$cluster\n}\n\nplot_grid(ncol = 3,\n  DimPlot(alldata, reduction = \"umap\", group.by = \"kmeans_5\")+ggtitle(\"kmeans_5\"),\n  DimPlot(alldata, reduction = \"umap\", group.by = \"kmeans_10\")+ggtitle(\"kmeans_10\"),\n  DimPlot(alldata, reduction = \"umap\", group.by = \"kmeans_15\")+ggtitle(\"kmeans_15\")\n)\n```\n\n::: {.cell-output-display}\n![](seurat_04_clustering_files/figure-html/unnamed-chunk-7-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nclustree(alldata@meta.data, prefix = \"kmeans_\")\n```\n\n::: {.cell-output-display}\n![](seurat_04_clustering_files/figure-html/unnamed-chunk-8-1.png){width=768}\n:::\n:::\n\n\n## {{< meta clust_hier >}}\n\n### {{< meta clust_hier_dist >}}\n\n\n{{< meta clust_hier_dist_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- dist( alldata@reductions[[\"pca\"]]@cell.embeddings, method=\"euclidean\")\n```\n:::\n\n{{< meta clust_hier_dist_2 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Compute sample correlations\nsample_cor <- cor( Matrix::t(alldata@reductions[[\"pca\"]]@cell.embeddings) )\n\n#Transform the scale from correlations\nsample_cor <- (1 - sample_cor) / 2\n\n#Convert it to a distance object\nd2 <- as.dist(sample_cor)\n```\n:::\n\n\n### {{< meta clust_hier_clust >}}\n\n\n{{< meta clust_hier_clust_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#euclidean\nh_euclidean <- hclust(d, method=\"ward.D2\")\n\n#correlation\nh_correlation <- hclust(d2, method=\"ward.D2\")\n```\n:::\n\n{{< meta clust_hier_clust_2 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#euclidean distance\nalldata$hc_euclidean_5 <- cutree(h_euclidean,k = 5)\nalldata$hc_euclidean_10 <- cutree(h_euclidean,k = 10)\nalldata$hc_euclidean_15 <- cutree(h_euclidean,k = 15)\n\n#correlation distance\nalldata$hc_corelation_5 <- cutree(h_correlation,k = 5)\nalldata$hc_corelation_10 <- cutree(h_correlation,k = 10)\nalldata$hc_corelation_15 <- cutree(h_correlation,k = 15)\n\n\nplot_grid(ncol = 3,\n  DimPlot(alldata, reduction = \"umap\", group.by = \"hc_euclidean_5\")+ggtitle(\"hc_euc_5\"),\n  DimPlot(alldata, reduction = \"umap\", group.by = \"hc_euclidean_10\")+ggtitle(\"hc_euc_10\"),\n  DimPlot(alldata, reduction = \"umap\", group.by = \"hc_euclidean_15\")+ggtitle(\"hc_euc_15\"),\n\n  DimPlot(alldata, reduction = \"umap\", group.by = \"hc_corelation_5\")+ggtitle(\"hc_cor_5\"),\n  DimPlot(alldata, reduction = \"umap\", group.by = \"hc_corelation_10\")+ggtitle(\"hc_cor_10\"),\n  DimPlot(alldata, reduction = \"umap\", group.by = \"hc_corelation_15\")+ggtitle(\"hc_cor_15\")\n)\n```\n\n::: {.cell-output-display}\n![](seurat_04_clustering_files/figure-html/unnamed-chunk-12-1.png){width=1248}\n:::\n:::\n\n{{< meta clust_save >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveRDS(alldata,\"data/results/covid_qc_dr_int_cl.rds\")\n```\n:::\n\n\n### {{< meta clust_distribution >}}\n\n\n{{< meta clust_distribution_1 >}}\n\n\n\nSelect the \"CCA_snn_res.0.5\" and plot proportion of samples per cluster and also proportion covid vs ctrl. \n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 = ggplot(alldata@meta.data, aes(x=CCA_snn_res.0.5, fill=orig.ident)) + geom_bar(position = \"fill\")\np2 = ggplot(alldata@meta.data, aes(x=CCA_snn_res.0.5, fill=type)) + geom_bar(position = \"fill\")\n\np1 + p2\n```\n\n::: {.cell-output-display}\n![](seurat_04_clustering_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n{{< meta clust_distribution_2 >}}\n\n\n{{< meta clust_distribution_3 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(alldata@meta.data, aes(x = orig.ident, fill=CCA_snn_res.0.5)) + geom_bar(position = \"fill\")\n```\n\n::: {.cell-output-display}\n![](seurat_04_clustering_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n\n:::{.callout-note title=\"Discuss\"}\n\n{{< meta clust_3 >}}\n\n\n:::\n\n## {{< meta session >}}\n\n<details>\n  <summary>Click here</summary>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] clustree_0.5.0     ggraph_2.1.0       rafalib_1.0.0      pheatmap_1.0.12   \n[5] ggplot2_3.4.2      cowplot_1.1.1      SeuratObject_4.1.3 Seurat_4.3.0      \n\nloaded via a namespace (and not attached):\n  [1] RColorBrewer_1.1-3     rstudioapi_0.14        jsonlite_1.8.5        \n  [4] magrittr_2.0.3         spatstat.utils_3.0-3   farver_2.1.1          \n  [7] rmarkdown_2.22         vctrs_0.6.2            ROCR_1.0-11           \n [10] spatstat.explore_3.2-1 htmltools_0.5.5        sctransform_0.3.5     \n [13] parallelly_1.36.0      KernSmooth_2.23-20     htmlwidgets_1.6.2     \n [16] ica_1.0-3              plyr_1.8.8             plotly_4.10.2         \n [19] zoo_1.8-12             igraph_1.4.3           mime_0.12             \n [22] lifecycle_1.0.3        pkgconfig_2.0.3        Matrix_1.5-4          \n [25] R6_2.5.1               fastmap_1.1.1          fitdistrplus_1.1-11   \n [28] future_1.32.0          shiny_1.7.4            digest_0.6.31         \n [31] colorspace_2.1-0       patchwork_1.1.2        tensor_1.5            \n [34] irlba_2.3.5.1          labeling_0.4.2         progressr_0.13.0      \n [37] fansi_1.0.4            spatstat.sparse_3.0-1  httr_1.4.6            \n [40] polyclip_1.10-4        abind_1.4-5            compiler_4.3.0        \n [43] withr_2.5.0            backports_1.4.1        viridis_0.6.3         \n [46] ggforce_0.4.1          MASS_7.3-58.4          tools_4.3.0           \n [49] lmtest_0.9-40          httpuv_1.6.11          future.apply_1.11.0   \n [52] goftest_1.2-3          glue_1.6.2             nlme_3.1-162          \n [55] promises_1.2.0.1       grid_4.3.0             checkmate_2.2.0       \n [58] Rtsne_0.16             cluster_2.1.4          reshape2_1.4.4        \n [61] generics_0.1.3         gtable_0.3.3           spatstat.data_3.0-1   \n [64] tidyr_1.3.0            data.table_1.14.8      tidygraph_1.2.3       \n [67] sp_1.6-1               utf8_1.2.3             spatstat.geom_3.2-1   \n [70] RcppAnnoy_0.0.20       ggrepel_0.9.3          RANN_2.6.1            \n [73] pillar_1.9.0           stringr_1.5.0          later_1.3.1           \n [76] splines_4.3.0          dplyr_1.1.2            tweenr_2.0.2          \n [79] lattice_0.21-8         survival_3.5-5         deldir_1.0-9          \n [82] tidyselect_1.2.0       miniUI_0.1.1.1         pbapply_1.7-0         \n [85] knitr_1.43             gridExtra_2.3          scattermore_1.2       \n [88] xfun_0.39              graphlayouts_1.0.0     matrixStats_1.0.0     \n [91] stringi_1.7.12         lazyeval_0.2.2         yaml_2.3.7            \n [94] evaluate_0.21          codetools_0.2-19       tibble_3.2.1          \n [97] cli_3.6.1              uwot_0.1.14            xtable_1.8-4          \n[100] reticulate_1.30        munsell_0.5.0          Rcpp_1.0.10           \n[103] globals_0.16.2         spatstat.random_3.1-5  png_0.1-8             \n[106] parallel_4.3.0         ellipsis_0.3.2         listenv_0.9.0         \n[109] viridisLite_0.4.2      scales_1.2.1           ggridges_0.5.4        \n[112] leiden_0.4.3           purrr_1.0.1            rlang_1.1.1           \n```\n:::\n:::\n\n\n</details>\n",
    "supporting": [
      "seurat_04_clustering_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}