{
  "hash": "c70c34ca93b297174f280589271f2fb3",
  "result": {
    "markdown": "---\ntitle: \"{{< meta dimred_title >}}\"\nsubtitle: \"{{< meta subtitle_seurat >}}\"\ndescription: \"{{< meta dimred_description >}}\"\nformat: html\n---\n\n\n::: {.callout-note}\nCode chunks run R commands unless otherwise specified.\n:::\n\n## {{< meta dimred_prep >}}\n\n\n{{< meta dimred_prep_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Activate conda environment to get the correct python path\nreticulate::use_condaenv(\"seurat\", conda = \"/opt/conda/bin/conda\")\nreticulate::py_discover_config()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\npython:         /opt/conda/envs/seurat/bin/python\nlibpython:      /opt/conda/envs/seurat/lib/libpython3.8.so\npythonhome:     /opt/conda/envs/seurat:/opt/conda/envs/seurat\nversion:        3.8.18 | packaged by conda-forge | (default, Dec 23 2023, 17:21:28)  [GCC 12.3.0]\nnumpy:          /opt/conda/envs/seurat/lib/python3.8/site-packages/numpy\nnumpy_version:  1.24.4\n\nNOTE: Python version was forced by use_python function\n```\n:::\n\n```{.r .cell-code}\nsuppressPackageStartupMessages({\n    library(Seurat)\n    library(ggplot2) # plotting\n    library(patchwork) # combining figures\n    library(scran)\n})\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npath_data <- \"https://export.uppmax.uu.se/naiss2023-23-3/workshops/workshop-scrnaseq\"\n\npath_file <- \"data/covid/results/seurat_covid_qc.rds\"\nif (!file.exists(path_file)) download.file(url = file.path(path_data, \"covid/results/seurat_covid_qc.rds\"), destfile = path_file)\nalldata <- readRDS(path_file)\n```\n:::\n\n\n## {{< meta dimred_fs >}}\n\n\n{{< meta dimred_fs_2 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsuppressWarnings(suppressMessages(alldata <- FindVariableFeatures(alldata, selection.method = \"vst\", nfeatures = 2000, verbose = FALSE, assay = \"RNA\")))\ntop20 <- head(VariableFeatures(alldata), 20)\n\nLabelPoints(plot = VariableFeaturePlot(alldata), points = top20, repel = TRUE)\n```\n\n::: {.cell-output-display}\n![](seurat_02_dimred_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n## {{< meta dimred_zs >}}\n\n\n{{< meta dimred_zs_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nalldata <- ScaleData(alldata, vars.to.regress = c(\"percent_mito\", \"nFeature_RNA\"), assay = \"RNA\")\n```\n:::\n\n\n## {{< meta dimred_pca >}}\n\n\n{{< meta dimred_pca_1 >}}\n\n\n\nTo run PCA you can use the function `RunPCA()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nalldata <- RunPCA(alldata, npcs = 50, verbose = F)\n```\n:::\n\n{{< meta dimred_pca_2 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrap_plots(\n    DimPlot(alldata, reduction = \"pca\", group.by = \"orig.ident\", dims = 1:2),\n    DimPlot(alldata, reduction = \"pca\", group.by = \"orig.ident\", dims = 3:4),\n    DimPlot(alldata, reduction = \"pca\", group.by = \"orig.ident\", dims = 5:6),\n    ncol = 3\n)\n```\n\n::: {.cell-output-display}\n![](seurat_02_dimred_files/figure-html/unnamed-chunk-6-1.png){width=1152}\n:::\n:::\n\n{{< meta dimred_pca_3 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nVizDimLoadings(alldata, dims = 1:5, reduction = \"pca\", ncol = 5, balanced = T)\n```\n\n::: {.cell-output-display}\n![](seurat_02_dimred_files/figure-html/unnamed-chunk-7-1.png){width=1344}\n:::\n:::\n\n{{< meta dimred_pca_4 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nElbowPlot(alldata, reduction = \"pca\", ndims = 50)\n```\n\n::: {.cell-output-display}\n![](seurat_02_dimred_files/figure-html/unnamed-chunk-8-1.png){width=480}\n:::\n:::\n\n{{< meta dimred_pca_5 >}}\n\n\n\n## {{< meta dimred_tsne >}}\n\n\n{{< meta dimred_tsne_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nalldata <- RunTSNE(\n    alldata,\n    reduction = \"pca\", dims = 1:30,\n    perplexity = 30,\n    max_iter = 1000,\n    theta = 0.5,\n    eta = 200,\n    num_threads = 0\n)\n# see ?Rtsne and ?RunTSNE for more info\n```\n:::\n\n{{< meta dimred_tsne_2 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDimPlot(alldata, reduction = \"tsne\", group.by = \"orig.ident\")\n```\n\n::: {.cell-output-display}\n![](seurat_02_dimred_files/figure-html/unnamed-chunk-10-1.png){width=480}\n:::\n:::\n\n\n\n## {{< meta dimred_umap >}}\n\n\n{{< meta dimred_umap_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nalldata <- RunUMAP(\n    alldata,\n    reduction = \"pca\",\n    dims = 1:30,\n    n.components = 2,\n    n.neighbors = 30,\n    n.epochs = 200,\n    min.dist = 0.3,\n    learning.rate = 1,\n    spread = 1\n)\n# see ?RunUMAP for more info\n```\n:::\n\n\nAnother usefullness of UMAP is that it is not limitted by the number of dimensions the data cen be reduced into (unlike tSNE). We can simply reduce the dimentions altering the `n.components` parameter. So here we will create an UMAP with 10 dimensions.\n\nIn Seurat we can add in additional reductions, by default they are named \"pca\", \"umap\", \"tsne\" etc. depending on the function you run. Here we will specify an alternative name for the umap with the `reduction.name` parameter. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nalldata <- RunUMAP(\n    alldata,\n    reduction.name = \"UMAP10_on_PCA\",\n    reduction = \"pca\",\n    dims = 1:30,\n    n.components = 10,\n    n.neighbors = 30,\n    n.epochs = 200,\n    min.dist = 0.3,\n    learning.rate = 1,\n    spread = 1\n)\n# see ?RunUMAP for more info\n```\n:::\n\n{{< meta dimred_umap_2 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrap_plots(\n    DimPlot(alldata, reduction = \"umap\", group.by = \"orig.ident\") + ggplot2::ggtitle(label = \"UMAP_on_PCA\"),\n    DimPlot(alldata, reduction = \"UMAP10_on_PCA\", group.by = \"orig.ident\", dims = 1:2) + ggplot2::ggtitle(label = \"UMAP10_on_PCA\"),\n    DimPlot(alldata, reduction = \"UMAP10_on_PCA\", group.by = \"orig.ident\", dims = 3:4) + ggplot2::ggtitle(label = \"UMAP10_on_PCA\"),\n    ncol = 3\n)\n```\n\n::: {.cell-output-display}\n![](seurat_02_dimred_files/figure-html/unnamed-chunk-13-1.png){width=1344}\n:::\n:::\n\n{{< meta dimred_umap_3 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrap_plots(\n    DimPlot(alldata, reduction = \"pca\", group.by = \"orig.ident\"),\n    DimPlot(alldata, reduction = \"tsne\", group.by = \"orig.ident\"),\n    DimPlot(alldata, reduction = \"umap\", group.by = \"orig.ident\"),\n    ncol = 3\n)\n```\n\n::: {.cell-output-display}\n![](seurat_02_dimred_files/figure-html/unnamed-chunk-14-1.png){width=1344}\n:::\n:::\n\n\n::: {.callout-note title=\"Discuss\"}\n\n{{< meta dimred_umap_4 >}}\n\n\n:::\n\n## {{< meta dimred_zsg >}}\n\n\n{{< meta dimred_zsg_1 >}}\n\n\n\n### {{< meta dimred_zsg_zs >}}\n\n\n{{< meta dimred_zsg_zs_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nalldata <- RunUMAP(\n    alldata,\n    reduction.name = \"UMAP_on_ScaleData\",\n    features = alldata@assays$RNA@var.features,\n    assay = \"RNA\",\n    n.components = 2,\n    n.neighbors = 30,\n    n.epochs = 200,\n    min.dist = 0.3,\n    learning.rate = 1,\n    spread = 1\n)\n```\n:::\n\n\n### {{< meta dimred_zsg_g >}}\n\n\n{{< meta dimred_zsg_g_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Build Graph\nalldata <- FindNeighbors(alldata,\n    reduction = \"pca\",\n    assay = \"RNA\",\n    k.param = 20,\n    features = alldata@assays$RNA@var.features\n)\n\nalldata <- RunUMAP(alldata,\n    reduction.name = \"UMAP_on_Graph\",\n    umap.method = \"umap-learn\",\n    graph = \"RNA_snn\",\n    n.epochs = 200,\n    assay = \"RNA\"\n)\n```\n:::\n\n{{< meta dimred_zsg_g_2 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- DimPlot(alldata, reduction = \"umap\", group.by = \"orig.ident\") + ggplot2::ggtitle(label = \"UMAP_on_PCA\")\np2 <- DimPlot(alldata, reduction = \"UMAP_on_ScaleData\", group.by = \"orig.ident\") + ggplot2::ggtitle(label = \"UMAP_on_ScaleData\")\np3 <- DimPlot(alldata, reduction = \"UMAP_on_Graph\", group.by = \"orig.ident\") + ggplot2::ggtitle(label = \"UMAP_on_Graph\")\n\nwrap_plots(p1, p2, p3, nrow = 2) +\n    plot_layout(guides = \"collect\")\n```\n\n::: {.cell-output-display}\n![](seurat_02_dimred_files/figure-html/unnamed-chunk-17-1.png){width=864}\n:::\n:::\n\n\n## {{< meta dimred_plotgenes >}}\n\n\n{{< meta dimred_plotgenes_1 >}}\n\n\n\n|Markers|Cell Type|\n|:---|:---|\n|CD3E|T cells|\n|CD3E CD4|CD4+ T cells|\n|CD3E CD8A|CD8+ T cells|\n|GNLY, NKG7|NK cells|\n|MS4A1|B cells|\n|CD14, LYZ, CST3, MS4A7|CD14+ Monocytes|\n|FCGR3A, LYZ, CST3, MS4A7|FCGR3A+  Monocytes|\n|FCER1A, CST3|DCs|\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmyfeatures <- c(\"CD3E\", \"CD4\", \"CD8A\", \"NKG7\", \"GNLY\", \"MS4A1\", \"CD14\", \"LYZ\", \"MS4A7\", \"FCGR3A\", \"CST3\", \"FCER1A\")\nplot_list <- list()\nfor (i in myfeatures) {\n    plot_list[[i]] <- FeaturePlot(alldata,\n        reduction = \"umap\", dims = 1:2,\n        features = i, ncol = 3, order = T\n    ) + NoLegend() + NoAxes() + NoGrid()\n}\nwrap_plots(plotlist = plot_list, ncol = 3)\n```\n:::\n\n\n:::{.callout-note title=\"Discuss\"}\n\n{{< meta dimred_plotgenes_2 >}}\n\n\n:::\n\n## {{< meta dimred_save >}}\n\n\n{{< meta dimred_save_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveRDS(alldata, \"data/covid/results/seurat_covid_qc_dr.rds\")\n```\n:::\n\n\n## {{< meta session >}}\n\n<details>\n  <summary>Click here</summary>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] scran_1.30.0                scuttle_1.12.0             \n [3] SingleCellExperiment_1.24.0 SummarizedExperiment_1.32.0\n [5] Biobase_2.62.0              GenomicRanges_1.54.1       \n [7] GenomeInfoDb_1.38.2         IRanges_2.36.0             \n [9] S4Vectors_0.40.2            BiocGenerics_0.48.1        \n[11] MatrixGenerics_1.14.0       matrixStats_1.0.0          \n[13] patchwork_1.1.2             ggplot2_3.4.2              \n[15] SeuratObject_4.1.3          Seurat_4.3.0               \n\nloaded via a namespace (and not attached):\n  [1] RColorBrewer_1.1-3        rstudioapi_0.14          \n  [3] jsonlite_1.8.5            magrittr_2.0.3           \n  [5] spatstat.utils_3.0-3      farver_2.1.1             \n  [7] rmarkdown_2.22            zlibbioc_1.48.0          \n  [9] vctrs_0.6.2               ROCR_1.0-11              \n [11] DelayedMatrixStats_1.24.0 spatstat.explore_3.2-1   \n [13] RCurl_1.98-1.12           S4Arrays_1.2.0           \n [15] htmltools_0.5.5           BiocNeighbors_1.20.1     \n [17] SparseArray_1.2.3         sctransform_0.3.5        \n [19] parallelly_1.36.0         KernSmooth_2.23-20       \n [21] htmlwidgets_1.6.2         ica_1.0-3                \n [23] plyr_1.8.8                plotly_4.10.2            \n [25] zoo_1.8-12                igraph_1.4.3             \n [27] mime_0.12                 lifecycle_1.0.3          \n [29] pkgconfig_2.0.3           rsvd_1.0.5               \n [31] Matrix_1.5-4              R6_2.5.1                 \n [33] fastmap_1.1.1             GenomeInfoDbData_1.2.11  \n [35] fitdistrplus_1.1-11       future_1.32.0            \n [37] shiny_1.7.4               digest_0.6.31            \n [39] colorspace_2.1-0          rprojroot_2.0.3          \n [41] tensor_1.5                dqrng_0.3.0              \n [43] irlba_2.3.5.1             beachmat_2.18.0          \n [45] labeling_0.4.2            progressr_0.13.0         \n [47] fansi_1.0.4               spatstat.sparse_3.0-1    \n [49] httr_1.4.6                polyclip_1.10-4          \n [51] abind_1.4-5               compiler_4.3.0           \n [53] here_1.0.1                withr_2.5.0              \n [55] BiocParallel_1.36.0       MASS_7.3-58.4            \n [57] DelayedArray_0.28.0       bluster_1.12.0           \n [59] tools_4.3.0               lmtest_0.9-40            \n [61] httpuv_1.6.11             future.apply_1.11.0      \n [63] goftest_1.2-3             glue_1.6.2               \n [65] nlme_3.1-162              promises_1.2.0.1         \n [67] grid_4.3.0                Rtsne_0.16               \n [69] cluster_2.1.4             reshape2_1.4.4           \n [71] generics_0.1.3            gtable_0.3.3             \n [73] spatstat.data_3.0-1       tidyr_1.3.0              \n [75] data.table_1.14.8         metapod_1.10.1           \n [77] ScaledMatrix_1.10.0       BiocSingular_1.18.0      \n [79] sp_1.6-1                  utf8_1.2.3               \n [81] XVector_0.42.0            spatstat.geom_3.2-1      \n [83] RcppAnnoy_0.0.20          ggrepel_0.9.3            \n [85] RANN_2.6.1                pillar_1.9.0             \n [87] stringr_1.5.0             limma_3.58.1             \n [89] later_1.3.1               splines_4.3.0            \n [91] dplyr_1.1.2               lattice_0.21-8           \n [93] survival_3.5-5            deldir_1.0-9             \n [95] tidyselect_1.2.0          locfit_1.5-9.8           \n [97] miniUI_0.1.1.1            pbapply_1.7-0            \n [99] knitr_1.43                gridExtra_2.3            \n[101] edgeR_4.0.3               scattermore_1.2          \n[103] xfun_0.39                 statmod_1.5.0            \n[105] stringi_1.7.12            lazyeval_0.2.2           \n[107] yaml_2.3.7                evaluate_0.21            \n[109] codetools_0.2-19          tibble_3.2.1             \n[111] cli_3.6.1                 uwot_0.1.14              \n[113] xtable_1.8-4              reticulate_1.30          \n[115] munsell_0.5.0             Rcpp_1.0.10              \n[117] globals_0.16.2            spatstat.random_3.1-5    \n[119] png_0.1-8                 parallel_4.3.0           \n[121] ellipsis_0.3.2            sparseMatrixStats_1.14.0 \n[123] bitops_1.0-7              listenv_0.9.0            \n[125] viridisLite_0.4.2         scales_1.2.1             \n[127] ggridges_0.5.4            crayon_1.5.2             \n[129] leiden_0.4.3              purrr_1.0.1              \n[131] rlang_1.1.1               cowplot_1.1.1            \n```\n:::\n:::\n\n\n</details>\n",
    "supporting": [
      "seurat_02_dimred_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}