{
  "hash": "c0d461706d121611bbb8af629372fcb2",
  "result": {
    "markdown": "---\ntitle: \"{{< meta dimred_title >}}\"\nsubtitle: \"{{< meta subtitle_seurat >}}\"\ndescription: \"{{< meta dimred_description >}}\"\nformat: html\n---\n\n\n::: {.callout-note}\nCode chunks run R commands unless otherwise specified.\n:::\n\n## {{< meta dimred_prep >}}\n\n\n{{< meta dimred_prep_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsuppressPackageStartupMessages({\n  library(Seurat)\n  library(cowplot)\n  library(ggplot2)\n  library(scran)\n})\n\nalldata <- readRDS(\"data/results/seurat_covid_qc.rds\")\n```\n:::\n\n\n## {{< meta dimred_fs >}}\n\n\n{{< meta dimred_fs_2 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsuppressWarnings(suppressMessages(alldata <- FindVariableFeatures(alldata, selection.method = \"vst\", nfeatures = 2000 ,verbose = FALSE,assay = \"RNA\")))\ntop20 <- head(VariableFeatures(alldata), 20)\n\nLabelPoints(plot = VariableFeaturePlot(alldata), points = top20, repel = TRUE)\n```\n\n::: {.cell-output-display}\n![](seurat_02_dimred_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n## {{< meta dimred_zs >}}\n\n\n{{< meta dimred_zs_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nalldata <- ScaleData(alldata, vars.to.regress = c(\"percent_mito\", \"nFeature_RNA\"), assay = \"RNA\")\n```\n:::\n\n\n## {{< meta dimred_pca >}}\n\n\n{{< meta dimred_pca_1 >}}\n\n\n\nTo run PCA you can use the function `RunPCA()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nalldata <- RunPCA(alldata, npcs = 50, verbose = F)\n```\n:::\n\n{{< meta dimred_pca_2 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_grid(ncol = 3,\n  DimPlot(alldata, reduction = \"pca\", group.by = \"orig.ident\",dims = 1:2),\n  DimPlot(alldata, reduction = \"pca\", group.by = \"orig.ident\",dims = 3:4),\n  DimPlot(alldata, reduction = \"pca\", group.by = \"orig.ident\",dims = 5:6)\n)\n```\n\n::: {.cell-output-display}\n![](seurat_02_dimred_files/figure-html/unnamed-chunk-5-1.png){width=1152}\n:::\n:::\n\n{{< meta dimred_pca_3 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nVizDimLoadings(alldata, dims = 1:5, reduction = \"pca\",ncol = 5,balanced = T)\n```\n\n::: {.cell-output-display}\n![](seurat_02_dimred_files/figure-html/unnamed-chunk-6-1.png){width=1344}\n:::\n:::\n\n{{< meta dimred_pca_4 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nElbowPlot(alldata, reduction = \"pca\",ndims = 50)\n```\n\n::: {.cell-output-display}\n![](seurat_02_dimred_files/figure-html/unnamed-chunk-7-1.png){width=480}\n:::\n:::\n\n{{< meta dimred_pca_5 >}}\n\n\n\n## {{< meta dimred_tsne >}}\n\n\n{{< meta dimred_tsne_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nalldata <- RunTSNE(alldata, reduction = \"pca\", dims = 1:30, \n                   perplexity=30,\n                   max_iter=1000,\n                   theta=0.5,\n                   eta=200,\n                   num_threads=0 )\n#see ?Rtsne and ?RunTSNE for more info\n```\n:::\n\n{{< meta dimred_tsne_2 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDimPlot(alldata, reduction = \"tsne\", group.by = \"orig.ident\")\n```\n\n::: {.cell-output-display}\n![](seurat_02_dimred_files/figure-html/unnamed-chunk-9-1.png){width=480}\n:::\n:::\n\n\n\n## {{< meta dimred_umap >}}\n\n\n{{< meta dimred_umap_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nalldata <- RunUMAP(alldata, reduction = \"pca\", dims = 1:30,\n                   n.components=2,\n                   n.neighbors=30,\n                   n.epochs=200,\n                   min.dist=0.3,\n                   learning.rate=1,\n                   spread=1 )\n#see ?RunUMAP for more info\n```\n:::\n\n\nAnother usefullness of UMAP is that it is not limitted by the number of dimensions the data cen be reduced into (unlike tSNE). We can simply reduce the dimentions altering the `n.components` parameter.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# we can add in additional reductions, by defulat they are named \"pca\", \"umap\", \"tsne\" etc. But we can specify alternative names with reduction.name\n\nalldata <- RunUMAP(alldata, reduction.name = \"UMAP10_on_PCA\",\n                   reduction = \"pca\", \n                   dims = 1:30,\n                   n.components=10,\n                   n.neighbors=30,\n                   n.epochs=200,\n                   min.dist=0.3,\n                   learning.rate=1,\n                   spread=1 )\n#see ?RunUMAP for more info\n```\n:::\n\n{{< meta dimred_umap_2 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_grid(ncol = 3,\n  DimPlot(alldata, reduction = \"umap\", group.by = \"orig.ident\")+ ggplot2::ggtitle(label =\"UMAP_on_PCA\"),\n  DimPlot(alldata, reduction = \"UMAP10_on_PCA\", group.by = \"orig.ident\",dims = 1:2)+ ggplot2::ggtitle(label =\"UMAP10_on_PCA\"),\n  DimPlot(alldata, reduction = \"UMAP10_on_PCA\", group.by = \"orig.ident\",dims = 3:4)+ ggplot2::ggtitle(label =\"UMAP10_on_PCA\")\n)\n```\n\n::: {.cell-output-display}\n![](seurat_02_dimred_files/figure-html/unnamed-chunk-12-1.png){width=1344}\n:::\n:::\n\n{{< meta dimred_umap_3 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_grid(ncol = 3,\n  DimPlot(alldata, reduction = \"pca\", group.by = \"orig.ident\"),\n  DimPlot(alldata, reduction = \"tsne\", group.by = \"orig.ident\"),\n  DimPlot(alldata, reduction = \"umap\", group.by = \"orig.ident\")\n)\n```\n\n::: {.cell-output-display}\n![](seurat_02_dimred_files/figure-html/unnamed-chunk-13-1.png){width=1344}\n:::\n:::\n\n\n::: {.callout-note title=\"Discuss\"}\n\n{{< meta dimred_umap_4 >}}\n\n\n:::\n\n## {{< meta dimred_zsg >}}\n\n\n{{< meta dimred_zsg_1 >}}\n\n\n\n### {{< meta dimred_zsg_zs >}}\n\n\n{{< meta dimred_zsg_zs_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nalldata <- RunUMAP(alldata, reduction.name = \"UMAP_on_ScaleData\",\n                   features = alldata@assays$RNA@var.features,\n                   assay = \"RNA\",\n                   n.components=2,\n                   n.neighbors=30,\n                   n.epochs=200,\n                   min.dist=0.3,\n                   learning.rate=1,\n                   spread=1 )\n```\n:::\n\n\n### {{< meta dimred_zsg_g >}}\n\n\n{{< meta dimred_zsg_g_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Build Graph\nalldata <- FindNeighbors(alldata,\n                         reduction = \"pca\",\n                         assay = \"RNA\",\n                         k.param = 20,\n                         features = alldata@assays$RNA@var.features)\n\n#Run UMAP on a graph\nlibrary(reticulate)\nreticulate::use_condaenv(\"sspy\")\nalldata <- RunUMAP(alldata, reduction.name = \"UMAP_on_Graph\", umap.method = \"umap-learn\", graph = \"RNA_snn\", assay = \"RNA\" )\n```\n:::\n\n{{< meta dimred_zsg_g_2 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- DimPlot(alldata, reduction = \"umap\", group.by = \"orig.ident\")+ ggplot2::ggtitle(label =\"UMAP_on_PCA\")\np2 <- DimPlot(alldata, reduction = \"UMAP_on_ScaleData\", group.by = \"orig.ident\")+ ggplot2::ggtitle(label =\"UMAP_on_ScaleData\")\np3 <- DimPlot(alldata, reduction = \"UMAP_on_Graph\", group.by = \"orig.ident\")+ ggplot2::ggtitle(label =\"UMAP_on_Graph\")\nleg <- get_legend(p1)\n\ngridExtra::grid.arrange(\n  gridExtra::arrangeGrob(\n    p1 + NoLegend() + NoAxes(),\n    p2 + NoLegend() + NoAxes(),\n    p3 + NoLegend() + NoAxes(), \n    leg,nrow=2),\n  ncol=1,widths=c(1)\n)\n```\n\n::: {.cell-output-display}\n![](seurat_02_dimred_files/figure-html/unnamed-chunk-16-1.png){width=864}\n:::\n:::\n\n\n## {{< meta dimred_plotgenes >}}\n\n\n{{< meta dimred_plotgenes_1 >}}\n\n\n\n|Markers|Cell Type|\n|:---|:---|\n|CD3E|T cells|\n|CD3E CD4|CD4+ T cells|\n|CD3E CD8A|CD8+ T cells|\n|GNLY, NKG7|NK cells|\n|MS4A1|B cells|\n|CD14, LYZ, CST3, MS4A7|CD14+ Monocytes|\n|FCGR3A, LYZ, CST3, MS4A7|FCGR3A+  Monocytes|\n|FCER1A, CST3|DCs|\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmyfeatures <- c(\"CD3E\",\"CD4\",\"CD8A\",\"NKG7\",\"GNLY\",\"MS4A1\",\"CD14\",\"LYZ\",\"MS4A7\",\"FCGR3A\",\"CST3\",\"FCER1A\")\nplot_list <- list()\nfor(i in myfeatures){\n  plot_list[[i]] <- FeaturePlot(alldata, reduction = \"umap\",dims = 1:2,\n            features = i,ncol = 3,order = T) + NoLegend() + NoAxes() + NoGrid() }\nplot_grid(ncol=3, plotlist = plot_list)\n```\n\n::: {.cell-output-display}\n![](seurat_02_dimred_files/figure-html/unnamed-chunk-17-1.png){width=1152}\n:::\n:::\n\n\n:::{.callout-note title=\"Discuss\"}\n\n{{< meta dimred_plotgenes_2 >}}\n\n\n:::\n\n## {{< meta dimred_save >}}\n\n\n{{< meta dimred_save_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npath <- \"data/results/covid_qc_dr.rds\"\nif(!file.exists(path)) saveRDS(alldata,path)\n```\n:::\n\n\n## {{< meta session >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.2.3 (2023-03-15)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.2 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3\nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] reticulate_1.30             scran_1.26.2               \n [3] scuttle_1.8.4               SingleCellExperiment_1.20.1\n [5] SummarizedExperiment_1.28.0 Biobase_2.58.0             \n [7] GenomicRanges_1.50.2        GenomeInfoDb_1.34.9        \n [9] IRanges_2.32.0              S4Vectors_0.36.2           \n[11] BiocGenerics_0.44.0         MatrixGenerics_1.10.0      \n[13] matrixStats_1.0.0           ggplot2_3.4.2              \n[15] cowplot_1.1.1               SeuratObject_4.1.3         \n[17] Seurat_4.3.0.1             \n\nloaded via a namespace (and not attached):\n  [1] plyr_1.8.8                igraph_1.5.0             \n  [3] lazyeval_0.2.2            sp_2.0-0                 \n  [5] splines_4.2.3             BiocParallel_1.32.6      \n  [7] listenv_0.9.0             scattermore_1.2          \n  [9] digest_0.6.33             htmltools_0.5.5          \n [11] fansi_1.0.4               magrittr_2.0.3           \n [13] ScaledMatrix_1.6.0        tensor_1.5               \n [15] cluster_2.1.4             ROCR_1.0-11              \n [17] limma_3.54.2              globals_0.16.2           \n [19] spatstat.sparse_3.0-2     colorspace_2.1-0         \n [21] rappdirs_0.3.3            ggrepel_0.9.3            \n [23] xfun_0.39                 dplyr_1.1.1              \n [25] RCurl_1.98-1.12           jsonlite_1.8.7           \n [27] progressr_0.13.0          spatstat.data_3.0-1      \n [29] survival_3.5-3            zoo_1.8-12               \n [31] glue_1.6.2                polyclip_1.10-4          \n [33] gtable_0.3.3              zlibbioc_1.44.0          \n [35] XVector_0.38.0            leiden_0.4.3             \n [37] DelayedArray_0.24.0       BiocSingular_1.14.0      \n [39] future.apply_1.11.0       abind_1.4-5              \n [41] scales_1.2.1              edgeR_3.40.2             \n [43] spatstat.random_3.1-5     miniUI_0.1.1.1           \n [45] Rcpp_1.0.10               viridisLite_0.4.2        \n [47] xtable_1.8-4              dqrng_0.3.0              \n [49] rsvd_1.0.5                metapod_1.6.0            \n [51] htmlwidgets_1.6.2         httr_1.4.6               \n [53] RColorBrewer_1.1-3        ellipsis_0.3.2           \n [55] ica_1.0-3                 farver_2.1.1             \n [57] pkgconfig_2.0.3           uwot_0.1.16              \n [59] deldir_1.0-9              here_1.0.1               \n [61] locfit_1.5-9.8            utf8_1.2.3               \n [63] labeling_0.4.2            tidyselect_1.2.0         \n [65] rlang_1.1.1               reshape2_1.4.4           \n [67] later_1.3.1               munsell_0.5.0            \n [69] tools_4.2.3               cli_3.6.1                \n [71] generics_0.1.3            ggridges_0.5.4           \n [73] evaluate_0.21             stringr_1.5.0            \n [75] fastmap_1.1.1             yaml_2.3.7               \n [77] goftest_1.2-3             knitr_1.43               \n [79] fitdistrplus_1.1-11       purrr_1.0.1              \n [81] RANN_2.6.1                pbapply_1.7-2            \n [83] future_1.33.0             nlme_3.1-162             \n [85] sparseMatrixStats_1.10.0  mime_0.12                \n [87] compiler_4.2.3            rstudioapi_0.14          \n [89] plotly_4.10.2             png_0.1-8                \n [91] spatstat.utils_3.0-3      statmod_1.5.0            \n [93] tibble_3.2.1              stringi_1.7.12           \n [95] lattice_0.20-45           bluster_1.8.0            \n [97] Matrix_1.6-0              vctrs_0.6.3              \n [99] pillar_1.9.0              lifecycle_1.0.3          \n[101] spatstat.geom_3.2-1       lmtest_0.9-40            \n[103] RcppAnnoy_0.0.21          BiocNeighbors_1.16.0     \n[105] data.table_1.14.8         bitops_1.0-7             \n[107] irlba_2.3.5.1             httpuv_1.6.11            \n[109] patchwork_1.1.2           R6_2.5.1                 \n[111] promises_1.2.0.1          KernSmooth_2.23-20       \n[113] gridExtra_2.3             parallelly_1.36.0        \n[115] codetools_0.2-19          MASS_7.3-58.2            \n[117] rprojroot_2.0.3           withr_2.5.0              \n[119] sctransform_0.3.5         GenomeInfoDbData_1.2.9   \n[121] parallel_4.2.3            grid_4.2.3               \n[123] beachmat_2.14.2           tidyr_1.3.0              \n[125] rmarkdown_2.21            DelayedMatrixStats_1.20.0\n[127] Rtsne_0.16                spatstat.explore_3.2-1   \n[129] shiny_1.7.4              \n```\n:::\n:::\n",
    "supporting": [
      "seurat_02_dimred_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}