{
  "hash": "abb1870b1015cafd585efb9d3ae9f4f7",
  "result": {
    "markdown": "---\ntitle: \"{{< meta dimred_title >}}\"\nsubtitle: \"{{< meta subtitle_bioc >}}\"\ndescription: \"{{< meta dimred_description >}}\"\nformat: html\n---\n\n\n::: {.callout-note}\nCode chunks run R commands unless otherwise specified.\n:::\n\n## {{< meta dimred_prep >}}\n\n\n{{< meta dimred_prep_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsuppressPackageStartupMessages({\n  library(scater)\n  library(scran)\n  library(cowplot)\n  library(ggplot2)\n  library(rafalib)\n  library(umap)\n})\n\nsce <- readRDS(\"data/results/covid_qc.rds\")\n```\n:::\n\n\n## {{< meta dimred_fs >}}\n\n\n{{< meta dimred_fs_2 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsce <- computeSumFactors(sce, sizes=c(20, 40, 60, 80))\nsce <- logNormCounts(sce)\nvar.out <- modelGeneVar(sce, method=\"loess\")\nhvgs = getTopHVGs(var.out, n=2000)\n\nmypar(1,2)\n#plot mean over TOTAL variance\n# Visualizing the fit:\nfit.var <- metadata(var.out)\nplot(fit.var$mean, fit.var$var, xlab=\"Mean of log-expression\",\n    ylab=\"Variance of log-expression\")\ncurve(fit.var$trend(x), col=\"dodgerblue\", add=TRUE, lwd=2)\n\n#Select 1000 top variable genes\nhvg.out <- getTopHVGs(var.out, n=1000)\n\n# highligt those cells in the plot\ncutoff <- rownames(var.out) %in% hvg.out\npoints(fit.var$mean[cutoff], fit.var$var[cutoff], col=\"red\", pch=16,cex=.6)\n\n#plot mean over BIOLOGICAL variance\nplot(var.out$mean, var.out$bio, pch=16, cex=0.4, xlab=\"Mean log-expression\", ylab=\"Variance of log-expression\")\nlines(c(min(var.out$mean),max(var.out$mean)), c(0,0), col=\"dodgerblue\", lwd=2)\npoints(var.out$mean[cutoff], var.out$bio[cutoff], col=\"red\", pch=16,cex=.6)\n```\n\n::: {.cell-output-display}\n![](bioc_02_dimred_files/figure-html/unnamed-chunk-2-1.png){width=768}\n:::\n:::\n\n\n## {{< meta dimred_zs >}}\n\n\n{{< meta dimred_zs_1 >}}\n\n\n\nHowever, unlike the Seurat, this step is implemented inside the PCA function below. Here we will show you how to add the scaledData back to the object.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# sce@assays$data@listData$scaled.data <- apply(exprs(sce)[rownames(hvg.out),,drop=FALSE],2,function(x) scale(x,T,T))\n# rownames(sce@assays$data@listData$scaled.data) <- rownames(hvg.out)\n```\n:::\n\n\n\n## {{< meta dimred_pca >}}\n\n\n{{< meta dimred_pca_1 >}}\n\n\n\nWe use the `logcounts` and then set `scale_features` to TRUE in order to scale each gene.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#runPCA and specify the variable genes to use for dim reduction with subset_row\nsce <- runPCA(sce, exprs_values = \"logcounts\", ncomponents = 50, subset_row = hvg.out, scale = TRUE)\n```\n:::\n\n{{< meta dimred_pca_2 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_grid(ncol = 3,\n  plotReducedDim(sce,dimred = \"PCA\",colour_by = \"sample\",ncomponents = 1:2,point_size = 0.6),\n  plotReducedDim(sce,dimred = \"PCA\",colour_by = \"sample\",ncomponents = 3:4,point_size = 0.6),\n  plotReducedDim(sce,dimred = \"PCA\",colour_by = \"sample\",ncomponents = 5:6,point_size = 0.6)\n)\n```\n\n::: {.cell-output-display}\n![](bioc_02_dimred_files/figure-html/unnamed-chunk-5-1.png){width=1248}\n:::\n:::\n\n{{< meta dimred_pca_3 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_grid(ncol = 2, plotExplanatoryPCs(sce))\n```\n\n::: {.cell-output-display}\n![](bioc_02_dimred_files/figure-html/unnamed-chunk-6-1.png){width=1536}\n:::\n:::\n\n{{< meta dimred_pca_4 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmypar()\nplot(attr(reducedDim(sce,\"PCA\"),\"percentVar\")[1:50]*100,type=\"l\",ylab=\"% variance\",xlab=\"Principal component #\")\npoints(attr(reducedDim(sce,\"PCA\"),\"percentVar\")[1:50]*100,pch=21,bg=\"grey\",cex=.5)\n```\n\n::: {.cell-output-display}\n![](bioc_02_dimred_files/figure-html/unnamed-chunk-7-1.png){width=384}\n:::\n:::\n\n{{< meta dimred_pca_5 >}}\n\n\n\n## {{< meta dimred_tsne >}}\n\n\n{{< meta dimred_tsne_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\nsce <- runTSNE(sce, dimred = \"PCA\", n_dimred = 30, perplexity = 30,name = \"tSNE_on_PCA\")\n```\n:::\n\n{{< meta dimred_tsne_2 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_grid(ncol = 3,plotReducedDim(sce,dimred = \"tSNE_on_PCA\",colour_by = \"sample\"))\n```\n\n::: {.cell-output-display}\n![](bioc_02_dimred_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n## {{< meta dimred_umap >}}\n\n\n{{< meta dimred_umap_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsce <- runUMAP(sce,dimred = \"PCA\", n_dimred = 30,   ncomponents = 2,name = \"UMAP_on_PCA\")\n#see ?umap and ?runUMAP for more info\n```\n:::\n\n{{< meta dimred_umap_2 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsce <- runUMAP(sce,dimred = \"PCA\", n_dimred = 30,   ncomponents = 10, name = \"UMAP10_on_PCA\")\n#see ?umap and ?runUMAP for more info\n```\n:::\n\n{{< meta dimred_umap_3 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_grid(ncol = 3,\n  plotReducedDim(sce,dimred = \"UMAP_on_PCA\",colour_by = \"sample\")+\n    ggplot2::ggtitle(label =\"UMAP_on_PCA\"),\n  plotReducedDim(sce,dimred = \"UMAP10_on_PCA\",colour_by = \"sample\",ncomponents = 1:2)+\n    ggplot2::ggtitle(label =\"UMAP10_on_PCA\"),\n  plotReducedDim(sce,dimred = \"UMAP10_on_PCA\",colour_by = \"sample\",ncomponents = 3:4)+\n    ggplot2::ggtitle(label =\"UMAP10_on_PCA\")\n)\n```\n\n::: {.cell-output-display}\n![](bioc_02_dimred_files/figure-html/unnamed-chunk-12-1.png){width=1440}\n:::\n:::\n\n\n::: {.callout-note title=\"Discuss\"}\n\n{{< meta dimred_umap_4 >}}\n\n\n:::\n\n## {{< meta dimred_zsg >}}\n\n\n{{< meta dimred_zsg_1 >}}\n\n\n\n### {{< meta dimred_zsg_zs >}}\n\n\n{{< meta dimred_zsg_zs_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsce <- runUMAP(sce, exprs_values='logcounts',name = \"UMAP_on_ScaleData\")\n```\n:::\n\n\n### {{< meta dimred_zsg_g >}}\n\n\n{{< meta dimred_zsg_g_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Build Graph\nnn <- RANN::nn2(reducedDim(sce,\"PCA\"),k = 30)\nnames(nn) <- c(\"idx\",\"dist\")\ng <- buildKNNGraph(sce, k=30, use.dimred=\"PCA\")\nreducedDim(sce,\"KNN\") <- igraph::as_adjacency_matrix(g)\n\n#Run UMAP and rename it for comparisson\n# temp <- umap::umap.defaults\ntry(reducedDim(sce,\"UMAP_on_Graph\") <- NULL)\nreducedDim(sce,\"UMAP_on_Graph\") <- uwot::umap(X=NULL, n_components = 2, nn_method=nn)\n```\n:::\n\n{{< meta dimred_zsg_g_2 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_grid(ncol = 3,\n  plotReducedDim(sce, dimred = \"UMAP_on_PCA\", colour_by = \"sample\")+\n    ggplot2::ggtitle(label =\"UMAP_on_PCA\"),\n  plotReducedDim(sce, dimred = \"UMAP_on_ScaleData\", colour_by = \"sample\")+\n    ggplot2::ggtitle(label =\"UMAP_on_ScaleData\"),\n  plotReducedDim(sce, dimred = \"UMAP_on_Graph\", colour_by = \"sample\")+\n    ggplot2::ggtitle(label =\"UMAP_on_Graph\")\n)\n```\n\n::: {.cell-output-display}\n![](bioc_02_dimred_files/figure-html/unnamed-chunk-15-1.png){width=1440}\n:::\n:::\n\n\n## {{< meta dimred_plotgenes >}}\n\n\n{{< meta dimred_plotgenes_1 >}}\n\n\n\n|Markers|Cell Type|\n|:---|:---|\n|CD3E|T cells|\n|CD3E CD4|CD4+ T cells|\n|CD3E CD8A|CD8+ T cells|\n|GNLY, NKG7|NK cells|\n|MS4A1|B cells|\n|CD14, LYZ, CST3, MS4A7|CD14+ Monocytes|\n|FCGR3A, LYZ, CST3, MS4A7|FCGR3A+  Monocytes|\n|FCER1A, CST3|DCs|\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplotlist <- list()\nfor(i in c(\"CD3E\",\"CD4\",\"CD8A\",\"NKG7\",\"GNLY\",\"MS4A1\",\"CD14\",\"LYZ\",\"MS4A7\",\"FCGR3A\",\"CST3\",\"FCER1A\")){\n  plotlist[[i]] <- plotReducedDim(sce,dimred = \"UMAP_on_PCA\",colour_by = i,by_exprs_values = \"logcounts\") +\n  scale_fill_gradientn(colours = colorRampPalette(c(\"grey90\",\"orange3\",\"firebrick\",\"firebrick\",\"red\",\"red\" ))(10)) +\n  ggtitle(label = i)+ theme(plot.title = element_text(size=20)) }\nplot_grid(ncol=3, plotlist = plotlist)\n```\n\n::: {.cell-output-display}\n![](bioc_02_dimred_files/figure-html/unnamed-chunk-16-1.png){width=1152}\n:::\n:::\n\n\n:::{.callout-note title=\"Discuss\"}\n\n{{< meta dimred_plotgenes_2 >}}\n\n\n:::\n\n## {{< meta dimred_save >}}\n\n\n{{< meta dimred_save_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npath <- \"data/results/covid_qc_dm.rds\"\nif(!file.exists(path)) saveRDS(sce,path)\n```\n:::\n\n\n## {{< meta session >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.2.3 (2023-03-15)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.2 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3\nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] umap_0.2.10.0               rafalib_1.0.0              \n [3] cowplot_1.1.1               scran_1.26.2               \n [5] scater_1.26.1               ggplot2_3.4.2              \n [7] scuttle_1.8.4               SingleCellExperiment_1.20.1\n [9] SummarizedExperiment_1.28.0 Biobase_2.58.0             \n[11] GenomicRanges_1.50.2        GenomeInfoDb_1.34.9        \n[13] IRanges_2.32.0              S4Vectors_0.36.2           \n[15] BiocGenerics_0.44.0         MatrixGenerics_1.10.0      \n[17] matrixStats_1.0.0          \n\nloaded via a namespace (and not attached):\n [1] bitops_1.0-7              RcppAnnoy_0.0.21         \n [3] RColorBrewer_1.1-3        tools_4.2.3              \n [5] utf8_1.2.3                R6_2.5.1                 \n [7] irlba_2.3.5.1             vipor_0.4.5              \n [9] uwot_0.1.16               colorspace_2.1-0         \n[11] withr_2.5.0               tidyselect_1.2.0         \n[13] gridExtra_2.3             compiler_4.2.3           \n[15] cli_3.6.1                 BiocNeighbors_1.16.0     \n[17] DelayedArray_0.24.0       labeling_0.4.2           \n[19] scales_1.2.1              askpass_1.1              \n[21] digest_0.6.33             rmarkdown_2.21           \n[23] XVector_0.38.0            pkgconfig_2.0.3          \n[25] htmltools_0.5.5           sparseMatrixStats_1.10.0 \n[27] fastmap_1.1.1             limma_3.54.2             \n[29] htmlwidgets_1.6.2         rlang_1.1.1              \n[31] rstudioapi_0.14           DelayedMatrixStats_1.20.0\n[33] generics_0.1.3            farver_2.1.1             \n[35] jsonlite_1.8.7            BiocParallel_1.32.6      \n[37] dplyr_1.1.1               RCurl_1.98-1.12          \n[39] magrittr_2.0.3            BiocSingular_1.14.0      \n[41] GenomeInfoDbData_1.2.9    Matrix_1.6-0             \n[43] Rcpp_1.0.10               ggbeeswarm_0.7.2         \n[45] munsell_0.5.0             fansi_1.0.4              \n[47] reticulate_1.30           viridis_0.6.3            \n[49] lifecycle_1.0.3           yaml_2.3.7               \n[51] edgeR_3.40.2              zlibbioc_1.44.0          \n[53] Rtsne_0.16                grid_4.2.3               \n[55] parallel_4.2.3            ggrepel_0.9.3            \n[57] dqrng_0.3.0               lattice_0.20-45          \n[59] beachmat_2.14.2           locfit_1.5-9.8           \n[61] metapod_1.6.0             knitr_1.43               \n[63] pillar_1.9.0              igraph_1.5.0             \n[65] codetools_0.2-19          ScaledMatrix_1.6.0       \n[67] glue_1.6.2                evaluate_0.21            \n[69] vctrs_0.6.3               png_0.1-8                \n[71] RANN_2.6.1                gtable_0.3.3             \n[73] openssl_2.0.6             xfun_0.39                \n[75] rsvd_1.0.5                RSpectra_0.16-1          \n[77] viridisLite_0.4.2         tibble_3.2.1             \n[79] beeswarm_0.4.0            cluster_2.1.4            \n[81] bluster_1.8.0             statmod_1.5.0            \n```\n:::\n:::\n",
    "supporting": [
      "bioc_02_dimred_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}