{
  "hash": "943aa3a337e14919f135c99020e2ab2c",
  "result": {
    "markdown": "---\ntitle: \"{{< meta ct_title >}}\"\nsubtitle: \"{{< meta subtitle_bioc >}}\"\ndescription: \"{{< meta ct_description >}}\"\nformat: html\n---\n\n\n::: {.callout-note}\nCode chunks run R commands unless otherwise specified.\n:::\n\n\n{{< meta ct_1 >}}\n\n\n{{< meta ct_2 >}}\n\n\n\n## {{< meta ct_read >}}\n\n\n{{< meta ct_read_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsuppressPackageStartupMessages({\n    library(scater)\n    library(scran)\n    library(dplyr)\n    library(patchwork)\n    library(ggplot2)\n    library(pheatmap)\n    library(scPred)\n    library(scmap)\n})\n```\n:::\n\n{{< meta ct_read_2 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npath_data <- \"https://export.uppmax.uu.se/naiss2023-23-3/workshops/workshop-scrnaseq\"\npath_file <- \"data/covid/results/bioc_covid_qc_dr_int_cl.rds\"\nif (!file.exists(path_file)) download.file(url = file.path(path_data, \"covid/results/bioc_covid_qc_dr_int_cl.rds\"), destfile = path_file)\nalldata <- readRDS(path_file)\n```\n:::\n\n{{< meta ct_read_2 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nctrl.sce <- alldata[, alldata@colData$sample == \"ctrl.13\"]\n\n# remove all old dimensionality reductions as they will mess up the analysis further down\nreducedDims(ctrl.sce) <- NULL\n```\n:::\n\n\n## {{< meta ct_ref >}}\n\n\n{{< meta ct_ref_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreference <- scPred::pbmc_1\nreference\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAn object of class Seurat \n32838 features across 3500 samples within 1 assay \nActive assay: RNA (32838 features, 0 variable features)\n```\n:::\n:::\n\n\nConvert to a SCE object.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nref.sce <- Seurat::as.SingleCellExperiment(reference)\n```\n:::\n\n{{< meta ct_ref_2 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Normalize\nref.sce <- computeSumFactors(ref.sce)\nref.sce <- logNormCounts(ref.sce)\n\n# Variable genes\nvar.out <- modelGeneVar(ref.sce, method = \"loess\")\nhvg.ref <- getTopHVGs(var.out, n = 1000)\n\n# Dim reduction\nref.sce <- runPCA(ref.sce,\n    exprs_values = \"logcounts\", scale = T,\n    ncomponents = 30, subset_row = hvg.ref\n)\nref.sce <- runUMAP(ref.sce, dimred = \"PCA\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplotReducedDim(ref.sce, dimred = \"UMAP\", colour_by = \"cell_type\")\n```\n\n::: {.cell-output-display}\n![](bioc_06_celltyping_files/figure-html/unnamed-chunk-7-1.png){width=576}\n:::\n:::\n\n{{< meta ct_ref_3 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Normalize\nctrl.sce <- computeSumFactors(ctrl.sce)\nctrl.sce <- logNormCounts(ctrl.sce)\n\n# Variable genes\nvar.out <- modelGeneVar(ctrl.sce, method = \"loess\")\nhvg.ctrl <- getTopHVGs(var.out, n = 1000)\n\n# Dim reduction\nctrl.sce <- runPCA(ctrl.sce, exprs_values = \"logcounts\", scale = T, ncomponents = 30, subset_row = hvg.ctrl)\nctrl.sce <- runUMAP(ctrl.sce, dimred = \"PCA\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplotReducedDim(ctrl.sce, dimred = \"UMAP\", colour_by = \"louvain_SNNk15\")\n```\n\n::: {.cell-output-display}\n![](bioc_06_celltyping_files/figure-html/unnamed-chunk-9-1.png){width=576}\n:::\n:::\n\n\n## scMap\n\nThe scMap package is one method for projecting cells from a scRNA-seq experiment on to the cell-types or individual cells identified in a different experiment. It can be run on different levels, either projecting by cluster or by single cell, here we will try out both.\n\nFor scmap cell type labels must be stored in the `cell_type1` column of the `colData` slots, and gene ids that are consistent across both datasets must be stored in the `feature_symbol` column of the `rowData` slots.\n\n### scMap cluster\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add in slot cell_type1\nref.sce@colData$cell_type1 <- ref.sce@colData$cell_type\n# create a rowData slot with feature_symbol\nrd <- data.frame(feature_symbol = rownames(ref.sce))\nrownames(rd) <- rownames(ref.sce)\nrowData(ref.sce) <- rd\n\n# same for the ctrl dataset\n# create a rowData slot with feature_symbol\nrd <- data.frame(feature_symbol = rownames(ctrl.sce))\nrownames(rd) <- rownames(ctrl.sce)\nrowData(ctrl.sce) <- rd\n```\n:::\n\n\nThen we can select variable features in both datasets.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# select features\ncounts(ctrl.sce) <- as.matrix(counts(ctrl.sce))\nlogcounts(ctrl.sce) <- as.matrix(logcounts(ctrl.sce))\nctrl.sce <- selectFeatures(ctrl.sce, suppress_plot = TRUE)\n\ncounts(ref.sce) <- as.matrix(counts(ref.sce))\nlogcounts(ref.sce) <- as.matrix(logcounts(ref.sce))\nref.sce <- selectFeatures(ref.sce, suppress_plot = TRUE)\n```\n:::\n\n\nThen we need to index the reference dataset by cluster, default is the clusters in `cell_type1`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nref.sce <- indexCluster(ref.sce)\n```\n:::\n\n\nNow we project the Covid-19 dataset onto that index.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nproject_cluster <- scmapCluster(\n    projection = ctrl.sce,\n    index_list = list(\n        ref = metadata(ref.sce)$scmap_cluster_index\n    )\n)\n\n# projected labels\ntable(project_cluster$scmap_cluster_labs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n     B cell  CD4 T cell  CD8 T cell         cDC       cMono      ncMono \n         70         104         125          38         215         160 \n    NK cell         pDC Plasma cell  unassigned \n        294           2           1         194 \n```\n:::\n:::\n\n\nThen add the predictions to metadata and plot UMAP.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add in predictions\nctrl.sce@colData$scmap_cluster <- project_cluster$scmap_cluster_labs\n\nplotReducedDim(ctrl.sce, dimred = \"UMAP\", colour_by = \"scmap_cluster\")\n```\n\n::: {.cell-output-display}\n![](bioc_06_celltyping_files/figure-html/unnamed-chunk-14-1.png){width=576}\n:::\n:::\n\n\n## scMap cell\n\nWe can instead index the refernce data based on each single cell and project our data onto the closest neighbor in that dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nref.sce <- indexCell(ref.sce)\n```\n:::\n\n\nAgain we need to index the reference dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nproject_cell <- scmapCell(\n    projection = ctrl.sce,\n    index_list = list(\n        ref = metadata(ref.sce)$scmap_cell_index\n    )\n)\n```\n:::\n\n\nWe now get a table with index for the 5 nearest neigbors in the reference dataset for each cell in our dataset. We will select the celltype of the closest neighbor and assign it to the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncell_type_pred <- colData(ref.sce)$cell_type1[project_cell$ref[[1]][1, ]]\ntable(cell_type_pred)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ncell_type_pred\n    B cell CD4 T cell CD8 T cell        cDC      cMono     ncMono    NK cell \n        99        173        276         61        223        161        208 \n       pDC \n         2 \n```\n:::\n:::\n\n\nThen add the predictions to metadata and plot umap.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add in predictions\nctrl.sce@colData$scmap_cell <- cell_type_pred\n\nplotReducedDim(ctrl.sce, dimred = \"UMAP\", colour_by = \"scmap_cell\")\n```\n\n::: {.cell-output-display}\n![](bioc_06_celltyping_files/figure-html/unnamed-chunk-18-1.png){width=576}\n:::\n:::\n\n\nPlot both:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrap_plots(\n    plotReducedDim(ctrl.sce, dimred = \"UMAP\", colour_by = \"scmap_cluster\"),\n    plotReducedDim(ctrl.sce, dimred = \"UMAP\", colour_by = \"scmap_cell\"),\n    ncol = 2\n)\n```\n\n::: {.cell-output-display}\n![](bioc_06_celltyping_files/figure-html/unnamed-chunk-19-1.png){width=960}\n:::\n:::\n\n\n## {{< meta ct_scpred >}}\n\n\n{{< meta ct_scpred_1 >}}\n\n\n\nscPred works with Seurat objects, so we will convert both objects to seurat objects. You may see a lot of warnings about renaming things, but as long as you do not see an Error, you should be fine.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsuppressPackageStartupMessages(library(Seurat))\n\nreference <- Seurat::as.Seurat(ref.sce)\nctrl <- Seurat::as.Seurat(ctrl.sce)\n```\n:::\n\n\nThe loadings matrix is lost when converted to Seurat object, and scPred needs that information. So we need to rerun PCA with Seurat and the same hvgs.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nVariableFeatures(reference) <- hvg.ref\nreference <- reference %>%\n    ScaleData(verbose = F) %>%\n    RunPCA(verbose = F)\n\nVariableFeatures(ctrl) <- hvg.ctrl\nctrl <- ctrl %>%\n    ScaleData(verbose = F) %>%\n    RunPCA(verbose = F)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nreference <- getFeatureSpace(reference, \"cell_type\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n●  Extracting feature space for each cell type...\nDONE!\n```\n:::\n\n```{.r .cell-code}\nreference <- trainModel(reference)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n●  Training models for each cell type...\nDONE!\n```\n:::\n:::\n\n{{< meta ct_scpred_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_scpred(reference)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'scPred' object\n✔  Prediction variable = cell_type \n✔  Discriminant features per cell type\n✔  Training model(s)\nSummary\n\n|Cell type   |    n| Features|Method    |   ROC|  Sens|  Spec|\n|:-----------|----:|--------:|:---------|-----:|-----:|-----:|\n|B cell      |  280|       50|svmRadial | 1.000| 1.000| 1.000|\n|CD4 T cell  | 1620|       50|svmRadial | 0.994| 0.972| 0.963|\n|CD8 T cell  |  945|       50|svmRadial | 0.973| 0.859| 0.971|\n|cDC         |   26|       50|svmRadial | 0.994| 0.727| 0.999|\n|cMono       |  212|       50|svmRadial | 1.000| 0.957| 0.997|\n|ncMono      |   79|       50|svmRadial | 1.000| 0.962| 0.999|\n|NK cell     |  312|       50|svmRadial | 0.998| 0.926| 0.995|\n|pDC         |   20|       50|svmRadial | 1.000| 0.950| 1.000|\n|Plasma cell |    6|       50|svmRadial | 1.000| 1.000| 1.000|\n```\n:::\n:::\n\n{{< meta ct_scpred_3 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nctrl <- scPredict(ctrl, reference)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n●  Matching reference with new dataset...\n\t ─ 1000 features present in reference loadings\n\t ─ 937 features shared between reference and new dataset\n\t ─ 93.7% of features in the reference are present in new dataset\n●  Aligning new data to reference...\n●  Classifying cells...\nDONE!\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nDimPlot(ctrl, group.by = \"scpred_prediction\", label = T, repel = T) + NoAxes()\n```\n\n::: {.cell-output-display}\n![](bioc_06_celltyping_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n{{< meta ct_scpred_4 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(ctrl@meta.data, aes(x = louvain_SNNk15, fill = scpred_prediction)) +\n    geom_bar() +\n    theme_classic()\n```\n\n::: {.cell-output-display}\n![](bioc_06_celltyping_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\nAdd the predictions into the SCE object\n\n\n::: {.cell}\n\n```{.r .cell-code}\nctrl.sce@colData$scpred_prediction <- ctrl$scpred_prediction\n```\n:::\n\n\n## {{< meta ct_compare >}}\n\n\n{{< meta ct_compare_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncrossTab(ctrl, \"scmap_cell\", \"scpred_prediction\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"B cell\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"CD4 T cell\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"CD8 T cell\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"cDC\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"cMono\"],\"name\":[5],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"ncMono\"],\"name\":[6],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"NK cell\"],\"name\":[7],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"pDC\"],\"name\":[8],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"99\",\"2\":\"1\",\"3\":\"1\",\"4\":\"1\",\"5\":\"0\",\"6\":\"2\",\"7\":\"0\",\"8\":\"0\",\"_rn_\":\"B cell\"},{\"1\":\"0\",\"2\":\"116\",\"3\":\"28\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"0\",\"_rn_\":\"CD4 T cell\"},{\"1\":\"0\",\"2\":\"35\",\"3\":\"205\",\"4\":\"0\",\"5\":\"2\",\"6\":\"0\",\"7\":\"117\",\"8\":\"0\",\"_rn_\":\"CD8 T cell\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"7\",\"5\":\"2\",\"6\":\"2\",\"7\":\"0\",\"8\":\"0\",\"_rn_\":\"cDC\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"39\",\"5\":\"177\",\"6\":\"41\",\"7\":\"0\",\"8\":\"0\",\"_rn_\":\"cMono\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"2\",\"5\":\"12\",\"6\":\"103\",\"7\":\"0\",\"8\":\"0\",\"_rn_\":\"ncMono\"},{\"1\":\"0\",\"2\":\"2\",\"3\":\"27\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0\",\"7\":\"74\",\"8\":\"0\",\"_rn_\":\"NK cell\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"1\",\"6\":\"0\",\"7\":\"0\",\"8\":\"0\",\"_rn_\":\"pDC\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"1\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"0\",\"_rn_\":\"Plasma cell\"},{\"1\":\"0\",\"2\":\"19\",\"3\":\"15\",\"4\":\"11\",\"5\":\"29\",\"6\":\"13\",\"7\":\"17\",\"8\":\"2\",\"_rn_\":\"unassigned\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n## {{< meta ct_gsea >}}\n\n\n{{< meta ct_gsea_1 >}}\n\n\n\n### {{< meta ct_gsea_deg >}}\n\n\n{{< meta ct_gsea_deg_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# run differential expression in our dataset, using clustering at resolution 0.3\nDGE_list <- scran::findMarkers(\n    x = alldata,\n    groups = as.character(alldata@colData$louvain_SNNk15),\n    pval.type = \"all\",\n    min.prop = 0\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Compute differential gene expression in reference dataset (that has cell annotation)\nref_DGE <- scran::findMarkers(\n    x = ref.sce,\n    groups = as.character(ref.sce@colData$cell_type),\n    pval.type = \"all\",\n    direction = \"up\"\n)\n\n# Identify the top cell marker genes in reference dataset\n# select top 50 with hihgest foldchange among top 100 signifcant genes.\nref_list <- lapply(ref_DGE, function(x) {\n    x$logFC <- rowSums(as.matrix(x[, grep(\"logFC\", colnames(x))]))\n    x %>%\n        as.data.frame() %>%\n        filter(p.value < 0.01) %>%\n        top_n(-100, p.value) %>%\n        top_n(50, logFC) %>%\n        rownames()\n})\n\nunlist(lapply(ref_list, length))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     B cell  CD4 T cell  CD8 T cell         cDC       cMono      ncMono \n         50          50          19          17          50          50 \n    NK cell         pDC Plasma cell \n         50          50          24 \n```\n:::\n:::\n\n{{< meta ct_gsea_deg_2 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsuppressPackageStartupMessages(library(fgsea))\n\n# run fgsea for each of the clusters in the list\nres <- lapply(DGE_list, function(x) {\n    x$logFC <- rowSums(as.matrix(x[, grep(\"logFC\", colnames(x))]))\n    gene_rank <- setNames(x$logFC, rownames(x))\n    fgseaRes <- fgsea(pathways = ref_list, stats = gene_rank, nperm = 10000)\n    return(fgseaRes)\n})\nnames(res) <- names(DGE_list)\n\n# You can filter and resort the table based on ES, NES or pvalue\nres <- lapply(res, function(x) {\n    x[x$pval < 0.1, ]\n})\nres <- lapply(res, function(x) {\n    x[x$size > 2, ]\n})\nres <- lapply(res, function(x) {\n    x[order(x$NES, decreasing = T), ]\n})\nres\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$`1`\n       pathway         pval         padj         ES       NES nMoreExtreme size\n1:       cMono 0.0001374759 0.0006186417  0.9501800  1.859513            0   47\n2:      ncMono 0.0001365188 0.0006186417  0.8950864  1.763843            0   49\n3: Plasma cell 0.0789550073 0.1015135808 -0.6832085 -1.381446          271   24\n4:     NK cell 0.0033619724 0.0050429585 -0.7073211 -1.649188            8   49\n5:  CD8 T cell 0.0005393743 0.0009708738 -0.9012291 -1.717135            1   18\n6:      B cell 0.0003665689 0.0008519500 -0.9085242 -2.104135            0   47\n7:  CD4 T cell 0.0003786445 0.0008519500 -0.9202034 -2.149934            0   50\n                                    leadingEdge\n1:      S100A8,S100A9,LYZ,S100A12,VCAN,FCN1,...\n2: S100A11,AIF1,S100A4,FCER1G,MAFB,SERPINA1,...\n3:       PEBP1,ISG20,MIF,FKBP11,CYCS,JCHAIN,...\n4:           GNLY,NKG7,CTSW,GZMA,B2M,FGFBP2,...\n5:             IL32,CCL5,GZMH,CD3D,CD2,CD8A,...\n6:     RPS5,CXCR4,RPL23A,RPL18A,RPL13A,CD52,...\n7:       RPL3,RPS4X,RPS27A,RPL5,EEF1A1,RPS6,...\n\n$`2`\n      pathway         pval         padj         ES       NES nMoreExtreme size\n1:     B cell 0.0002016942 0.0003658537  0.9650158  2.055089            0   47\n2: CD4 T cell 0.0002032520 0.0003658537  0.8597801  1.843225            0   50\n3:        cDC 0.0004162331 0.0006243496  0.9445902  1.707502            1   17\n4: CD8 T cell 0.0017377872 0.0022342979 -0.8930452 -1.645554            8   18\n5:      cMono 0.0001982554 0.0003658537 -0.8145626 -1.757387            0   47\n6:     ncMono 0.0001966568 0.0003658537 -0.8826130 -1.919359            0   49\n7:    NK cell 0.0001966568 0.0003658537 -0.9129074 -1.985238            0   49\n                                               leadingEdge\n1:              MS4A1,CD37,TNFRSF13C,CXCR4,BANK1,CD79B,...\n2:                   RPS6,RPL13,RPL32,RPS3A,RPS29,RPL3,...\n3: HLA-DRA,HLA-DPB1,HLA-DQB1,HLA-DRB1,HLA-DPA1,HLA-DMA,...\n4:                        CCL5,IL32,GZMH,CD3D,CD2,LYAR,...\n5:                S100A6,S100A9,LYZ,S100A8,TYROBP,FCN1,...\n6:              S100A4,FCER1G,S100A11,AIF1,IFITM3,LST1,...\n7:                     HCST,NKG7,ITGB2,GNLY,MYO1F,CST7,...\n\n$`3`\n      pathway         pval         padj         ES       NES nMoreExtreme size\n1:     ncMono 0.0001090513 0.0004930966  0.9400839  1.715376            0   49\n2:      cMono 0.0001095770 0.0004930966  0.9294487  1.691762            0   47\n3:        cDC 0.0076742171 0.0098668506  0.8815886  1.460765           61   17\n4: CD8 T cell 0.0005268704 0.0015806112 -0.9246449 -1.923371            0   18\n5:    NK cell 0.0012019231 0.0018703242 -0.7600257 -1.952662            0   49\n6: CD4 T cell 0.0012468828 0.0018703242 -0.7907317 -2.034183            0   50\n7:     B cell 0.0011415525 0.0018703242 -0.8931479 -2.277275            0   47\n                                               leadingEdge\n1:                AIF1,PSAP,S100A11,FCER1G,S100A4,LST1,...\n2:                S100A9,LYZ,S100A8,FCN1,TYROBP,S100A6,...\n3: HLA-DRA,HLA-DRB1,HLA-DPA1,HLA-DMA,HLA-DRB5,HLA-DQB1,...\n4:                        CCL5,IL32,GZMH,CD3D,CD2,CD8A,...\n5:                       NKG7,GNLY,CST7,GZMA,CTSW,GZMM,...\n6:                 RPS29,RPL3,PIK3IP1,IL7R,RPS3,RPS27A,...\n7:              CXCR4,MS4A1,CD79B,TNFRSF13C,RPS5,BANK1,...\n\n$`4`\n      pathway         pval         padj         ES       NES nMoreExtreme size\n1: CD4 T cell 0.0001904399 0.0004731861  0.9813226  2.127427            0   50\n2:    NK cell 0.0279705573 0.0419558360 -0.6651729 -1.466033          132   49\n3:        cDC 0.0002015723 0.0004731861 -0.9324969 -1.730698            0   17\n4:        pDC 0.0006299874 0.0011339773 -0.8176005 -1.794787            2   47\n5:      cMono 0.0002099958 0.0004731861 -0.9174122 -2.013893            0   47\n6:     ncMono 0.0002103049 0.0004731861 -0.9267677 -2.042585            0   49\n                                               leadingEdge\n1:                  IL7R,LDHB,PIK3IP1,NOSIP,RPL3,RPS12,...\n2:                    NKG7,GNLY,FGFBP2,MYO1F,CST7,GZMA,...\n3: HLA-DRA,HLA-DRB1,HLA-DPA1,HLA-DPB1,HLA-DQB1,HLA-DMA,...\n4:                     PLEK,NPC2,IRF8,PLAC8,PTPRE,CTSB,...\n5:                 S100A9,S100A8,LYZ,TYROBP,FCN1,APLP2,...\n6:                    FCER1G,PSAP,IFITM3,LYN,SAT1,LST1,...\n\n$`5`\n      pathway         pval         padj         ES       NES nMoreExtreme size\n1:     B cell 0.0001791152 0.0004100228  0.9622895  2.049912            0   47\n2: CD4 T cell 0.0001786671 0.0004100228  0.8766046  1.884582            0   50\n3:        cDC 0.0001885725 0.0004100228  0.9542271  1.736641            0   17\n4: CD8 T cell 0.0004249894 0.0006374841 -0.9049673 -1.714855            1   18\n5:      cMono 0.0009051822 0.0011638056 -0.7944489 -1.765062            3   47\n6:     ncMono 0.0002277904 0.0004100228 -0.8836018 -1.972247            0   49\n7:    NK cell 0.0002277904 0.0004100228 -0.9096947 -2.030488            0   49\n                                               leadingEdge\n1:          MS4A1,CD37,CXCR4,TNFRSF13C,BANK1,LINC00926,...\n2:                   RPS6,RPL32,RPL13,RPS3A,RPL9,RPS29,...\n3: HLA-DRA,HLA-DQB1,HLA-DRB1,HLA-DPB1,HLA-DPA1,HLA-DMA,...\n4:                        CCL5,IL32,GZMH,CD3D,CD2,LYAR,...\n5:                S100A6,S100A9,LYZ,S100A8,TYROBP,FCN1,...\n6:              S100A4,FCER1G,S100A11,AIF1,PSAP,IFITM3,...\n7:                     NKG7,HCST,ITGB2,GNLY,MYO1F,CST7,...\n\n$`6`\n      pathway         pval         padj         ES       NES nMoreExtreme size\n1:    NK cell 0.0001924928 0.0003751563  0.9350627  2.002803            0   49\n2: CD4 T cell 0.0001918281 0.0003751563  0.8671598  1.865367            0   50\n3: CD8 T cell 0.0001968892 0.0003751563  0.9667051  1.770353            0   18\n4:        cDC 0.0046653144 0.0069979716 -0.8817666 -1.616347           22   17\n5:     ncMono 0.0002080300 0.0003751563 -0.8666595 -1.905874            0   49\n6:      cMono 0.0002084202 0.0003751563 -0.9170294 -2.004037            0   47\n                                            leadingEdge\n1:                    NKG7,GNLY,CST7,GZMA,CTSW,GZMM,...\n2:                IL7R,RPS3,RPS29,RPL3,MGAT4A,RPS4X,...\n3:                    CCL5,IL32,GZMH,CD3D,LYAR,CD8A,...\n4: HLA-DRA,HLA-DQB1,HLA-DRB5,HLA-DMA,BASP1,HLA-DRB1,...\n5:                 FCER1G,AIF1,LST1,FTH1,COTL1,PSAP,...\n6:               S100A9,S100A8,LYZ,TYROBP,FCN1,VCAN,...\n\n$`7`\n      pathway         pval         padj         ES       NES nMoreExtreme size\n1:    NK cell 0.0002210922 0.0006632766  0.9846145  2.117468            0   49\n2: CD8 T cell 0.0053798149 0.0069169049  0.8928622  1.644897           24   18\n3:     ncMono 0.0025552108 0.0038328162 -0.7658120 -1.651574           13   49\n4:        cDC 0.0007487832 0.0016444363 -0.9111955 -1.655190            3   17\n5: CD4 T cell 0.0009135757 0.0016444363 -0.8069803 -1.743091            4   50\n6:      cMono 0.0001832845 0.0006632766 -0.8718277 -1.867701            0   47\n7:     B cell 0.0001832845 0.0006632766 -0.8952954 -1.917975            0   47\n                                               leadingEdge\n1:                     GNLY,NKG7,FGFBP2,CST7,PRF1,CTSW,...\n2:                   CCL5,GZMH,IL32,LYAR,CD2,LINC01871,...\n3:                      COTL1,FTH1,AIF1,LST1,SAT1,SPI1,...\n4: HLA-DRA,HLA-DRB1,HLA-DQB1,HLA-DPA1,HLA-DMA,HLA-DRB5,...\n5:               TMEM123,RPS13,RPL22,RPS28,RPL35A,IL7R,...\n6:                     S100A9,S100A8,LYZ,FCN1,TKT,VCAN,...\n7:               CD37,RPS11,MS4A1,CD52,BANK1,TNFRSF13C,...\n\n$`8`\n      pathway         pval         padj         ES       NES nMoreExtreme size\n1:     ncMono 0.0022692890 0.0034039334 -0.7518438 -1.408208           20   49\n2:    NK cell 0.0006483683 0.0011670629 -0.7790265 -1.459122            5   49\n3:     B cell 0.0004331817 0.0011670629 -0.7867214 -1.468136            3   47\n4:        cDC 0.0005750431 0.0011670629 -0.8888111 -1.500267            4   17\n5:      cMono 0.0001082954 0.0004873294 -0.8311141 -1.550979            0   47\n6: CD4 T cell 0.0001078283 0.0004873294 -0.9071450 -1.703099            0   50\n                                               leadingEdge\n1:           S100A4,S100A11,AIF1,IFITM2,CEBPB,SERPINA1,...\n2:                   ITGB2,NKG7,GNLY,MYO1F,IFITM1,JAK1,...\n3:                   CD52,RPS23,RPL13A,RPS11,RPL12,FAU,...\n4: HLA-DRA,HLA-DRB1,HLA-DPB1,HLA-DPA1,HLA-DQB1,HLA-DMA,...\n5:                   JUND,S100A6,NFKBIA,TYROBP,LYZ,FOS,...\n6:                RPL34,RPS13,RPL13,EEF1A1,RPS3A,RPL32,...\n\n$`9`\n       pathway         pval        padj         ES       NES nMoreExtreme size\n1:      ncMono 0.0001190334 0.001071301  0.9711973  1.880423            0   49\n2:         cDC 0.0061538462 0.011076923  0.8912772  1.524893           43   17\n3:       cMono 0.0142617450 0.018336529  0.7637603  1.472354          118   47\n4: Plasma cell 0.0295426953 0.033235532 -0.7039914 -1.553452           72   24\n5:     NK cell 0.0093691443 0.014053716 -0.6353087 -1.610902           14   49\n6:  CD8 T cell 0.0007171029 0.001613482 -0.8970790 -1.868262            1   18\n7:  CD4 T cell 0.0006447453 0.001613482 -0.8532543 -2.165470            0   50\n8:      B cell 0.0006031363 0.001613482 -0.8720295 -2.196604            0   47\n                                               leadingEdge\n1:                  AIF1,LST1,COTL1,FCER1G,PSAP,FCGR3A,...\n2: HLA-DPA1,HLA-DRA,HLA-DPB1,HLA-DRB1,HLA-DRB5,HLA-DMA,...\n3:                   LYZ,TYROBP,S100A6,FCN1,TKT,S100A9,...\n4:                 ISG20,CYCS,FKBP11,PEBP1,JCHAIN,MZB1,...\n5:                    CST7,IFITM1,GZMM,CD247,CCL4,HOPX,...\n6:                        CCL5,IL32,CD3D,GZMH,CD2,LYAR,...\n7:                   RPL31,RPS29,IL7R,RPS27A,RPS3,CCR7,...\n8:       CXCR4,MS4A1,BANK1,TNFRSF13C,LINC00926,RALGPS2,...\n```\n:::\n:::\n\n{{< meta ct_gsea_deg_3 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnew.cluster.ids <- unlist(lapply(res, function(x) {\n    as.data.frame(x)[1, 1]\n}))\n\nalldata@colData$ref_gsea <- new.cluster.ids[as.character(alldata@colData$louvain_SNNk15)]\n\nwrap_plots(\n    plotReducedDim(alldata, dimred = \"UMAP\", colour_by = \"louvain_SNNk15\"),\n    plotReducedDim(alldata, dimred = \"UMAP\", colour_by = \"ref_gsea\"),\n    ncol = 2\n)\n```\n\n::: {.cell-output-display}\n![](bioc_06_celltyping_files/figure-html/unnamed-chunk-32-1.png){width=960}\n:::\n:::\n\n{{< meta ct_gsea_deg_4 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nctrl.sce@colData$ref_gsea <- alldata@colData$ref_gsea[alldata@colData$sample == \"ctrl.13\"]\n\nwrap_plots(\n    plotReducedDim(ctrl.sce, dimred = \"UMAP\", colour_by = \"ref_gsea\"),\n    plotReducedDim(ctrl.sce, dimred = \"UMAP\", colour_by = \"scmap_cell\"),\n    plotReducedDim(ctrl.sce, dimred = \"UMAP\", colour_by = \"scpred_prediction\"),\n    ncol = 3\n)\n```\n\n::: {.cell-output-display}\n![](bioc_06_celltyping_files/figure-html/unnamed-chunk-33-1.png){width=1344}\n:::\n:::\n\n\n### {{< meta ct_gsea_annot >}}\n\n\n{{< meta ct_gsea_annot_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npath_file <- file.path(\"data/human_cell_markers.txt\")\nif (!file.exists(path_file)) download.file(file.path(path_data, \"human_cell_markers.txt\"), destfile = path_file)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmarkers <- read.delim(\"data/human_cell_markers.txt\")\nmarkers <- markers[markers$speciesType == \"Human\", ]\nmarkers <- markers[markers$cancerType == \"Normal\", ]\n\n# Filter by tissue (to reduce computational time and have tissue-specific classification)\n# sort(unique(markers$tissueType))\n# grep(\"blood\",unique(markers$tissueType),value = T)\n# markers <- markers [ markers$tissueType %in% c(\"Blood\",\"Venous blood\",\n#                                                \"Serum\",\"Plasma\",\n#                                                \"Spleen\",\"Bone marrow\",\"Lymph node\"), ]\n\n\n# remove strange characters etc.\ncelltype_list <- lapply(unique(markers$cellName), function(x) {\n    x <- paste(markers$geneSymbol[markers$cellName == x], sep = \",\")\n    x <- gsub(\"[[]|[]]| |-\", \",\", x)\n    x <- unlist(strsplit(x, split = \",\"))\n    x <- unique(x[!x %in% c(\"\", \"NA\", \"family\")])\n    x <- casefold(x, upper = T)\n})\nnames(celltype_list) <- unique(markers$cellName)\n# celltype_list <- lapply(celltype_list , function(x) {x[1:min(length(x),50)]} )\ncelltype_list <- celltype_list[unlist(lapply(celltype_list, length)) < 100]\ncelltype_list <- celltype_list[unlist(lapply(celltype_list, length)) > 5]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# run fgsea for each of the clusters in the list\nres <- lapply(DGE_list, function(x) {\n    x$logFC <- rowSums(as.matrix(x[, grep(\"logFC\", colnames(x))]))\n    gene_rank <- setNames(x$logFC, rownames(x))\n    fgseaRes <- fgsea(pathways = celltype_list, stats = gene_rank, nperm = 10000)\n    return(fgseaRes)\n})\nnames(res) <- names(DGE_list)\n\n# You can filter and resort the table based on ES, NES or pvalue\nres <- lapply(res, function(x) {\n    x[x$pval < 0.01, ]\n})\nres <- lapply(res, function(x) {\n    x[x$size > 5, ]\n})\nres <- lapply(res, function(x) {\n    x[order(x$NES, decreasing = T), ]\n})\n\n# show top 3 for each cluster.\nlapply(res, head, 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$`1`\n                  pathway         pval       padj        ES      NES\n1:             Neutrophil 0.0001262945 0.01255677 0.9241631 1.924456\n2: CD1C+_B dendritic cell 0.0001335827 0.01255677 0.9264088 1.848866\n3:           Stromal cell 0.0009880028 0.03095742 0.8633002 1.654331\n   nMoreExtreme size                                  leadingEdge\n1:            0   80 S100A8,S100A9,S100A12,NAMPT,MNDA,S100A11,...\n2:            0   53      S100A8,S100A9,LYZ,S100A12,VCAN,FCN1,...\n3:            6   38          VIM,TIMP2,BST1,TIMP1,ANPEP,CD44,...\n\n$`2`\n                       pathway        pval       padj         ES       NES\n1:           Follicular B cell 0.006265664 0.05609261  0.8594163  1.627800\n2:              Pyramidal cell 0.003499222 0.04049290 -0.9724892 -1.491022\n3: CD4+CD25+ regulatory T cell 0.001555210 0.02436496 -0.9802308 -1.502891\n   nMoreExtreme size                         leadingEdge\n1:           29   22 MS4A1,CD69,CD22,FCER2,CD40,PAX5,...\n2:           17    6                           NRGN,CD3E\n3:            7    6            CD3E,CD3D,CD3G,PTPRC,CD4\n\n$`3`\n                  pathway         pval        padj        ES      NES\n1:             Neutrophil 0.0001039393 0.005839235 0.8926313 1.678733\n2: CD1C+_B dendritic cell 0.0001079214 0.005839235 0.8876214 1.631908\n3:           Stromal cell 0.0001119695 0.005839235 0.8809050 1.578226\n   nMoreExtreme size                                 leadingEdge\n1:            0   80 S100A9,S100A8,S100A11,LST1,CD14,S100A12,...\n2:            0   53        S100A9,LYZ,S100A8,FCN1,VCAN,CD14,...\n3:            0   38        VIM,CD44,TIMP2,TIMP1,PECAM1,BST1,...\n\n$`4`\n             pathway         pval        padj        ES      NES nMoreExtreme\n1: Naive CD8+ T cell 0.0001850139 0.005733805 0.8621919 2.041550            0\n2: Naive CD4+ T cell 0.0001990446 0.005733805 0.9215337 1.876935            0\n3:       CD4+ T cell 0.0001996008 0.005733805 0.9188955 1.784074            0\n   size                            leadingEdge\n1:   91 LDHB,PIK3IP1,NOSIP,TCF7,RCAN3,NPM1,...\n2:   34    IL7R,NOSIP,TCF7,EEF1B2,RPS5,MAL,...\n3:   25        IL7R,LTB,CD3E,CD3D,CD3G,CD2,...\n\n$`5`\n                        pathway        pval       padj         ES       NES\n1:            Follicular B cell 0.005276050 0.04132906  0.8508984  1.611392\n2: Hematopoietic precursor cell 0.008804259 0.06157439 -0.9516708 -1.493675\n3:               Pyramidal cell 0.003071253 0.03608722 -0.9727473 -1.526755\n   nMoreExtreme size                         leadingEdge\n1:           27   22 MS4A1,CD69,CD22,CD40,FCER2,PAX5,...\n2:           42    6                          CD14,PTPRC\n3:           14    6                           CD3E,NRGN\n\n$`6`\n                             pathway         pval        padj        ES\n1:             CD4+ cytotoxic T cell 0.0001845700 0.008135006 0.8939977\n2: Effector CD8+ memory T (Tem) cell 0.0003718855 0.009318002 0.8025266\n3:               Natural killer cell 0.0003710575 0.009318002 0.7964526\n        NES nMoreExtreme size                           leadingEdge\n1: 2.061491            0   86     CCL5,NKG7,GZMH,GNLY,CST7,GZMA,...\n2: 1.830082            1   79 GZMH,GNLY,ARL4C,GZMB,FGFBP2,KLRD1,...\n3: 1.828792            1   84     NKG7,GNLY,CD3D,CD3E,GZMA,CD3G,...\n\n$`7`\n                             pathway         pval        padj        ES\n1:             CD4+ cytotoxic T cell 0.0002111932 0.009989373 0.9477569\n2: Effector CD8+ memory T (Tem) cell 0.0002125399 0.009989373 0.8971077\n3:               Natural killer cell 0.0002123142 0.009989373 0.8508958\n        NES nMoreExtreme size                           leadingEdge\n1: 2.201970            0   86   GNLY,NKG7,GZMB,FGFBP2,CCL5,CST7,...\n2: 2.063691            0   79 GNLY,GZMB,FGFBP2,KLRD1,SPON2,GZMH,...\n3: 1.971762            0   84   GNLY,NKG7,GZMB,GZMA,CD247,KLRD1,...\n\n$`8`\n            pathway        pval       padj         ES       NES nMoreExtreme\n1:    Megakaryocyte 0.002551020 0.08501292  0.7949586  1.759332            2\n2:       Neutrophil 0.009685482 0.11862585 -0.6819347 -1.336755           92\n3: Mesenchymal cell 0.009823812 0.11862585 -0.7135929 -1.361925           91\n   size                                 leadingEdge\n1:   25         PPBP,PF4,GP9,ITGA2B,CD9,RASGRP2,...\n2:   80 PTPRC,ITGB2,S100A11,CD44,IFITM2,S100A12,...\n3:   58         S100A4,PTPRC,VIM,CD44,ZEB2,CTSC,...\n\n$`9`\n                 pathway         pval       padj        ES      NES\n1:      Mesenchymal cell 0.0001175088 0.02209166 0.8504104 1.679679\n2:          Stromal cell 0.0007533903 0.04564584 0.8597427 1.627678\n3: Endometrial stem cell 0.0026760563 0.06288732 0.9037204 1.563668\n   nMoreExtreme size                           leadingEdge\n1:            0   58   COTL1,S100A4,VIM,CTSC,HES4,ZEB2,...\n2:            5   38 VIM,PECAM1,TIMP1,CD44,TIMP2,ICAM3,...\n3:           18   18 PECAM1,CD44,ITGA4,PTPRC,ITGB1,ENG,...\n```\n:::\n:::\n\n\n#CT_GSEA8:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnew.cluster.ids <- unlist(lapply(res, function(x) {\n    as.data.frame(x)[1, 1]\n}))\nalldata@colData$cellmarker_gsea <- new.cluster.ids[as.character(alldata@colData$louvain_SNNk15)]\n\nwrap_plots(\n    plotReducedDim(alldata, dimred = \"UMAP\", colour_by = \"cellmarker_gsea\"),\n    plotReducedDim(alldata, dimred = \"UMAP\", colour_by = \"ref_gsea\"),\n    ncol = 2\n)\n```\n\n::: {.cell-output-display}\n![](bioc_06_celltyping_files/figure-html/unnamed-chunk-37-1.png){width=960}\n:::\n:::\n\n\n:::{.callout-note title=\"Discuss\"}\n\n{{< meta ct_gsea_annot_2 >}}\n\n\n:::\n\n\n{{< meta ct_gsea_annot_3 >}}\n\n\n{{< meta ct_save >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveRDS(ctrl.sce, \"data/covid/results/bioc_covid_qc_dr_int_cl_ct-ctrl13.rds\")\n```\n:::\n\n\n## {{< meta session >}}\n\n<details>\n  <summary>Click here</summary>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] fgsea_1.28.0                caret_6.0-94               \n [3] lattice_0.21-8              SeuratObject_4.1.3         \n [5] Seurat_4.3.0                scmap_1.24.0               \n [7] scPred_1.9.2                pheatmap_1.0.12            \n [9] patchwork_1.1.2             dplyr_1.1.2                \n[11] scran_1.30.0                scater_1.30.1              \n[13] ggplot2_3.4.2               scuttle_1.12.0             \n[15] SingleCellExperiment_1.24.0 SummarizedExperiment_1.32.0\n[17] Biobase_2.62.0              GenomicRanges_1.54.1       \n[19] GenomeInfoDb_1.38.2         IRanges_2.36.0             \n[21] S4Vectors_0.40.2            BiocGenerics_0.48.1        \n[23] MatrixGenerics_1.14.0       matrixStats_1.0.0          \n\nloaded via a namespace (and not attached):\n  [1] spatstat.sparse_3.0-1     bitops_1.0-7             \n  [3] lubridate_1.9.2           httr_1.4.6               \n  [5] RColorBrewer_1.1-3        tools_4.3.0              \n  [7] sctransform_0.3.5         utf8_1.2.3               \n  [9] R6_2.5.1                  lazyeval_0.2.2           \n [11] uwot_0.1.14               withr_2.5.0              \n [13] sp_1.6-1                  gridExtra_2.3            \n [15] progressr_0.13.0          cli_3.6.1                \n [17] spatstat.explore_3.2-1    labeling_0.4.2           \n [19] spatstat.data_3.0-1       randomForest_4.7-1.1     \n [21] proxy_0.4-27              ggridges_0.5.4           \n [23] pbapply_1.7-0             harmony_1.2.0            \n [25] parallelly_1.36.0         limma_3.58.1             \n [27] rstudioapi_0.14           FNN_1.1.3.2              \n [29] generics_0.1.3            ica_1.0-3                \n [31] spatstat.random_3.1-5     Matrix_1.5-4             \n [33] ggbeeswarm_0.7.2          fansi_1.0.4              \n [35] abind_1.4-5               lifecycle_1.0.3          \n [37] yaml_2.3.7                edgeR_4.0.3              \n [39] recipes_1.0.6             SparseArray_1.2.3        \n [41] Rtsne_0.16                grid_4.3.0               \n [43] promises_1.2.0.1          dqrng_0.3.0              \n [45] crayon_1.5.2              miniUI_0.1.1.1           \n [47] beachmat_2.18.0           cowplot_1.1.1            \n [49] pillar_1.9.0              knitr_1.43               \n [51] metapod_1.10.1            future.apply_1.11.0      \n [53] codetools_0.2-19          fastmatch_1.1-3          \n [55] leiden_0.4.3              googleVis_0.7.1          \n [57] glue_1.6.2                data.table_1.14.8        \n [59] vctrs_0.6.2               png_0.1-8                \n [61] gtable_0.3.3              kernlab_0.9-32           \n [63] gower_1.0.1               xfun_0.39                \n [65] S4Arrays_1.2.0            mime_0.12                \n [67] prodlim_2023.03.31        survival_3.5-5           \n [69] timeDate_4022.108         iterators_1.0.14         \n [71] hardhat_1.3.0             lava_1.7.2.1             \n [73] statmod_1.5.0             bluster_1.12.0           \n [75] ellipsis_0.3.2            fitdistrplus_1.1-11      \n [77] ROCR_1.0-11               ipred_0.9-14             \n [79] nlme_3.1-162              RcppAnnoy_0.0.20         \n [81] irlba_2.3.5.1             vipor_0.4.5              \n [83] KernSmooth_2.23-20        rpart_4.1.19             \n [85] colorspace_2.1-0          nnet_7.3-18              \n [87] tidyselect_1.2.0          compiler_4.3.0           \n [89] BiocNeighbors_1.20.1      DelayedArray_0.28.0      \n [91] plotly_4.10.2             scales_1.2.1             \n [93] lmtest_0.9-40             stringr_1.5.0            \n [95] digest_0.6.31             goftest_1.2-3            \n [97] spatstat.utils_3.0-3      rmarkdown_2.22           \n [99] XVector_0.42.0            RhpcBLASctl_0.23-42      \n[101] htmltools_0.5.5           pkgconfig_2.0.3          \n[103] sparseMatrixStats_1.14.0  fastmap_1.1.1            \n[105] rlang_1.1.1               htmlwidgets_1.6.2        \n[107] shiny_1.7.4               DelayedMatrixStats_1.24.0\n[109] farver_2.1.1              zoo_1.8-12               \n[111] jsonlite_1.8.5            BiocParallel_1.36.0      \n[113] ModelMetrics_1.2.2.2      BiocSingular_1.18.0      \n[115] RCurl_1.98-1.12           magrittr_2.0.3           \n[117] GenomeInfoDbData_1.2.11   munsell_0.5.0            \n[119] Rcpp_1.0.10               viridis_0.6.3            \n[121] reticulate_1.30           stringi_1.7.12           \n[123] pROC_1.18.2               zlibbioc_1.48.0          \n[125] MASS_7.3-58.4             plyr_1.8.8               \n[127] parallel_4.3.0            listenv_0.9.0            \n[129] ggrepel_0.9.3             deldir_1.0-9             \n[131] splines_4.3.0             tensor_1.5               \n[133] locfit_1.5-9.8            igraph_1.4.3             \n[135] spatstat.geom_3.2-1       reshape2_1.4.4           \n[137] ScaledMatrix_1.10.0       evaluate_0.21            \n[139] foreach_1.5.2             httpuv_1.6.11            \n[141] RANN_2.6.1                tidyr_1.3.0              \n[143] purrr_1.0.1               polyclip_1.10-4          \n[145] future_1.32.0             scattermore_1.2          \n[147] rsvd_1.0.5                xtable_1.8-4             \n[149] e1071_1.7-13              later_1.3.1              \n[151] viridisLite_0.4.2         class_7.3-21             \n[153] tibble_3.2.1              beeswarm_0.4.0           \n[155] cluster_2.1.4             timechange_0.2.0         \n[157] globals_0.16.2           \n```\n:::\n:::\n\n\n</details>\n",
    "supporting": [
      "bioc_06_celltyping_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}