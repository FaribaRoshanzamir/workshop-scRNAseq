{
  "hash": "09d54326f8cdbeaeae78e6c2b463867a",
  "result": {
    "markdown": "---\ntitle: \"{{< meta clust_title >}}\"\nsubtitle: \"{{< meta subtitle_bioc >}}\"\ndescription: \"{{< meta clust_description >}}\"\nformat: html\n---\n\n\n::: {.callout-note}\nCode chunks run R commands unless otherwise specified.\n:::\n\n\n{{< meta clust_1 >}}\n\n\n{{< meta clust_2 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsuppressPackageStartupMessages({\n  library(scater)\n  library(scran)\n  library(cowplot)\n  library(ggplot2)\n  library(rafalib)\n  library(pheatmap)\n  library(igraph)\n})\n\nsce <- readRDS(\"data/results/covid_qc_dr_int.rds\")\n```\n:::\n\n\n## {{< meta clust_graphclust >}}\n\n\n{{< meta clust_graphclust_1 >}}\n\n\n\n### {{< meta clust_graphclust_knn >}}\n\n\n{{< meta clust_graphclust_knn_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#These 2 lines are for demonstration purposes only\ng <- buildKNNGraph(sce,k=30,use.dimred=\"MNN\")\nreducedDim(sce,\"KNN\") <- igraph::as_adjacency_matrix(g)\n\n#These 2 lines are the most recommended\ng <- buildSNNGraph(sce,k=30,use.dimred=\"MNN\")\nreducedDim(sce,\"SNN\")  <- as_adjacency_matrix(g, attr = \"weight\")\n```\n:::\n\n{{< meta clust_graphclust_knn_2 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#plot the KNN graph\npheatmap(reducedDim(sce,\"KNN\")[1:200,1:200],\n         col=c(\"white\",\"black\"),border_color = \"grey90\",\n         legend = F,cluster_rows = F,cluster_cols = F,fontsize = 2)\n```\n\n::: {.cell-output-display}\n![](bioc_04_clustering_files/figure-html/unnamed-chunk-3-1.png){width=576}\n:::\n\n```{.r .cell-code}\n#or the SNN graph\npheatmap(reducedDim(sce,\"SNN\")[1:200,1:200],\n        col = colorRampPalette(c(\"white\",\"yellow\",\"red\",\"black\"))(20),\n        border_color = \"grey90\",\n         legend = T,cluster_rows = F,cluster_cols = F,fontsize = 2)\n```\n\n::: {.cell-output-display}\n![](bioc_04_clustering_files/figure-html/unnamed-chunk-3-2.png){width=576}\n:::\n:::\n\n\nAs you can see, the way Scran computes the SNN graph is different to Seurat. It gives edges to all cells that shares a neighbor, but weights the edges by how similar the neighbors are. Hence, the SNN graph has more edges than the KNN graph.\n\n### {{< meta clust_graphclust_graph >}}\n\n\n{{< meta clust_graphclust_graph_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- buildSNNGraph(sce,k=5,use.dimred=\"MNN\")\nsce$louvain_SNNk5 <- factor( cluster_louvain(g)$membership )\n\ng <- buildSNNGraph(sce,k=10,use.dimred=\"MNN\")\nsce$louvain_SNNk10 <- factor( cluster_louvain(g)$membership )\n\ng <- buildSNNGraph(sce,k=15,use.dimred=\"MNN\")\nsce$louvain_SNNk15 <- factor( cluster_louvain(g)$membership )\n\nplot_grid(ncol = 3,\n  plotReducedDim(sce,dimred = \"UMAP_on_MNN\",colour_by = \"louvain_SNNk5\")+\n    ggplot2::ggtitle(label =\"louvain_SNNk5\"),\n  plotReducedDim(sce,dimred = \"UMAP_on_MNN\",colour_by = \"louvain_SNNk10\")+\n    ggplot2::ggtitle(label =\"louvain_SNNk10\"),\n  plotReducedDim(sce,dimred = \"UMAP_on_MNN\",colour_by = \"louvain_SNNk15\")+\n    ggplot2::ggtitle(label =\"louvain_SNNk15\")\n)\n```\n\n::: {.cell-output-display}\n![](bioc_04_clustering_files/figure-html/unnamed-chunk-4-1.png){width=1152}\n:::\n:::\n\n{{< meta clust_graphclust_graph_2 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsuppressPackageStartupMessages(library(clustree))\nclustree(sce, prefix = \"louvain_SNNk\")\n```\n\n::: {.cell-output-display}\n![](bioc_04_clustering_files/figure-html/unnamed-chunk-5-1.png){width=768}\n:::\n:::\n\n\n## {{< meta clust_kmean >}}\n\n\n{{< meta clust_kmean_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsce$kmeans_5 <- factor( kmeans(x = reducedDim(sce,\"MNN\"),centers = 5)$cluster )\nsce$kmeans_10 <- factor(kmeans(x = reducedDim(sce,\"MNN\"),centers = 10)$cluster)\nsce$kmeans_15 <- factor(kmeans(x = reducedDim(sce,\"MNN\"),centers = 15)$cluster)\n\nplot_grid(ncol = 3,\n  plotReducedDim(sce,dimred = \"UMAP_on_MNN\",colour_by = \"kmeans_5\")+\n    ggplot2::ggtitle(label =\"KMeans5\"),\n  plotReducedDim(sce,dimred = \"UMAP_on_MNN\",colour_by = \"kmeans_10\")+\n    ggplot2::ggtitle(label =\"KMeans10\"),\n  plotReducedDim(sce,dimred = \"UMAP_on_MNN\",colour_by = \"kmeans_15\")+\n    ggplot2::ggtitle(label =\"KMeans15\")\n)\n```\n\n::: {.cell-output-display}\n![](bioc_04_clustering_files/figure-html/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nclustree(sce, prefix = \"kmeans_\")\n```\n\n::: {.cell-output-display}\n![](bioc_04_clustering_files/figure-html/unnamed-chunk-7-1.png){width=768}\n:::\n:::\n\n\n## {{< meta clust_hier >}}\n\n### {{< meta clust_hier_dist >}}\n\n\n{{< meta clust_hier_dist_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- dist( reducedDim(sce,\"MNN\"),  method=\"euclidean\")\n```\n:::\n\n{{< meta clust_hier_dist_2 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Compute sample correlations\nsample_cor <- cor( Matrix::t(reducedDim(sce,\"MNN\")) )\n\n#Transform the scale from correlations\nsample_cor <- (1 - sample_cor) / 2\n\n#Convert it to a distance object\nd2 <- as.dist(sample_cor)\n```\n:::\n\n\n### {{< meta clust_hier_clust >}}\n\n\n{{< meta clust_hier_clust_1 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#euclidean\nh_euclidean <- hclust(d, method=\"ward.D2\")\n\n#correlation\nh_correlation <- hclust(d2, method=\"ward.D2\")\n```\n:::\n\n{{< meta clust_hier_clust_2 >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#euclidean distance\nsce$hc_euclidean_5 <- factor( cutree(h_euclidean,k = 5) )\nsce$hc_euclidean_10 <- factor( cutree(h_euclidean,k = 10) )\nsce$hc_euclidean_15 <- factor( cutree(h_euclidean,k = 15) )\n\n#correlation distance\nsce$hc_corelation_5 <- factor( cutree(h_correlation,k = 5) )\nsce$hc_corelation_10 <- factor( cutree(h_correlation,k = 10) )\nsce$hc_corelation_15 <- factor( cutree(h_correlation,k = 15) )\n\n\nplot_grid(ncol = 3,\n  plotReducedDim(sce,dimred = \"UMAP_on_MNN\",colour_by = \"hc_euclidean_5\")+\n    ggplot2::ggtitle(label =\"HC_euclidean_5\"),\n  plotReducedDim(sce,dimred = \"UMAP_on_MNN\",colour_by = \"hc_euclidean_10\")+\n    ggplot2::ggtitle(label =\"HC_euclidean_10\"),\n  plotReducedDim(sce,dimred = \"UMAP_on_MNN\",colour_by = \"hc_euclidean_15\")+\n    ggplot2::ggtitle(label =\"HC_euclidean_15\"),\n\n  plotReducedDim(sce,dimred = \"UMAP_on_MNN\",colour_by = \"hc_corelation_5\")+\n    ggplot2::ggtitle(label =\"HC_correlation_5\"),\n  plotReducedDim(sce,dimred = \"UMAP_on_MNN\",colour_by = \"hc_corelation_10\")+\n    ggplot2::ggtitle(label =\"HC_correlation_10\"),\n  plotReducedDim(sce,dimred = \"UMAP_on_MNN\",colour_by = \"hc_corelation_15\")+\n    ggplot2::ggtitle(label =\"HC_correlation_15\")\n)\n```\n\n::: {.cell-output-display}\n![](bioc_04_clustering_files/figure-html/unnamed-chunk-11-1.png){width=1248}\n:::\n:::\n\n{{< meta clust_save >}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveRDS(sce,\"data/results/covid_qc_dr_int_cl.rds\")\n```\n:::\n\n\n:::{.callout-note title=\"Discuss\"}\n\n{{< meta clust_3 >}}\n\n\n:::\n\n## {{< meta session >}}\n\n<details>\n  <summary>Click here</summary>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] clustree_0.5.0              ggraph_2.1.0               \n [3] igraph_1.4.3                pheatmap_1.0.12            \n [5] rafalib_1.0.0               cowplot_1.1.1              \n [7] scran_1.30.0                scater_1.30.1              \n [9] ggplot2_3.4.2               scuttle_1.12.0             \n[11] SingleCellExperiment_1.24.0 SummarizedExperiment_1.32.0\n[13] Biobase_2.62.0              GenomicRanges_1.54.1       \n[15] GenomeInfoDb_1.38.2         IRanges_2.36.0             \n[17] S4Vectors_0.40.2            BiocGenerics_0.48.1        \n[19] MatrixGenerics_1.14.0       matrixStats_1.0.0          \n\nloaded via a namespace (and not attached):\n [1] bitops_1.0-7              gridExtra_2.3            \n [3] rlang_1.1.1               magrittr_2.0.3           \n [5] compiler_4.3.0            DelayedMatrixStats_1.24.0\n [7] vctrs_0.6.2               pkgconfig_2.0.3          \n [9] crayon_1.5.2              fastmap_1.1.1            \n[11] backports_1.4.1           XVector_0.42.0           \n[13] labeling_0.4.2            utf8_1.2.3               \n[15] rmarkdown_2.22            ggbeeswarm_0.7.2         \n[17] purrr_1.0.1               xfun_0.39                \n[19] bluster_1.12.0            zlibbioc_1.48.0          \n[21] beachmat_2.18.0           jsonlite_1.8.5           \n[23] DelayedArray_0.28.0       tweenr_2.0.2             \n[25] BiocParallel_1.36.0       irlba_2.3.5.1            \n[27] parallel_4.3.0            cluster_2.1.4            \n[29] R6_2.5.1                  RColorBrewer_1.1-3       \n[31] limma_3.58.1              Rcpp_1.0.10              \n[33] knitr_1.43                Matrix_1.5-4             \n[35] tidyselect_1.2.0          rstudioapi_0.14          \n[37] abind_1.4-5               yaml_2.3.7               \n[39] viridis_0.6.3             codetools_0.2-19         \n[41] lattice_0.21-8            tibble_3.2.1             \n[43] withr_2.5.0               evaluate_0.21            \n[45] polyclip_1.10-4           pillar_1.9.0             \n[47] checkmate_2.2.0           generics_0.1.3           \n[49] RCurl_1.98-1.12           sparseMatrixStats_1.14.0 \n[51] munsell_0.5.0             scales_1.2.1             \n[53] glue_1.6.2                metapod_1.10.1           \n[55] tools_4.3.0               BiocNeighbors_1.20.1     \n[57] ScaledMatrix_1.10.0       locfit_1.5-9.8           \n[59] graphlayouts_1.0.0        tidygraph_1.2.3          \n[61] grid_4.3.0                tidyr_1.3.0              \n[63] edgeR_4.0.3               colorspace_2.1-0         \n[65] GenomeInfoDbData_1.2.11   beeswarm_0.4.0           \n[67] BiocSingular_1.18.0       ggforce_0.4.1            \n[69] vipor_0.4.5               cli_3.6.1                \n[71] rsvd_1.0.5                fansi_1.0.4              \n[73] S4Arrays_1.2.0            viridisLite_0.4.2        \n[75] dplyr_1.1.2               gtable_0.3.3             \n[77] digest_0.6.31             SparseArray_1.2.3        \n[79] ggrepel_0.9.3             dqrng_0.3.0              \n[81] htmlwidgets_1.6.2         farver_2.1.1             \n[83] htmltools_0.5.5           lifecycle_1.0.3          \n[85] statmod_1.5.0             MASS_7.3-58.4            \n```\n:::\n:::\n\n\n</details>\n",
    "supporting": [
      "bioc_04_clustering_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}