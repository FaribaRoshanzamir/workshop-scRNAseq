{
  "hash": "39b49f1942995c4cf58bb9df023f4156",
  "result": {
    "markdown": "---\ntitle: Run labs in container\nsubtitle: Instructions on running labs in Docker or Singularity container\ndate: \"\"\nauthor: \"\"\ncode-tools: false\nformat: html\nengine: knitr\n---\n\n::: {.cell}\n\n:::\n\n\n::: {.callout-note}\nThree different toolkits, namely **Seurat** (R/RStudio), **Bioconductor** (R/RStudio) and **Scanpy** (Python/Jupyter) are available to perform the scRNAseq analysis. The labs can be run on Uppmax using Singularity (Apptainer) or on your local machine using Docker. Both options provide the necessary environment to run the analysis.  \nIf you use Uppmax, you do not need any local installation or setup on your system but you need an Uppmax account and become a member of the Uppmax projects. If you use Docker, you will need to set up and run Docker yourself.\n:::\n\n\n## **Option A:** Run Singularity on Uppmax (Recommended)\n\n### Configure Uppmax \n\n#### Storage\n\nThis setup needs to be run **only once** at the beginning of the workshop. It will connect you to Uppmax and create a folder with your username in the workshop's directory.\n\nFirst connect to Uppmax: \n\n```bash\nssh -Y <username>@rackham.uppmax.uu.se\n```\n\nOnce you are connected, run the following commands:\n```bash\ncd /proj/naiss2023-23-648/nobackup\nmkdir $(id -un) && cd $_\n```\n\nNow you can fetch the scripts for the labs. You can either download individual `.qmd` or `.ipynb` files from the [Contents](/home_contents.html) page or clone the whole repo. If you clone the repo, navigate to `compiled/labs` directory to work on labs.\n\n```bash\ngit clone --depth 1 --single-branch --branch master https://github.com/nbisweden/workshop-scRNAseq.git\ncd workshop-scRNAseq/compiled/labs\n```\n\nIf the `git` command is not available, you can simply go to <https://github.com/NBISweden/workshop-scRNAseq> and download the repo as a zip file and unzip it in a suitable location.\n\n\n#### Compute\n\nTo run the labs you need to first create an *interactive session*. \n\nConnect to Uppmax (if not already connected): \n\n```bash\nssh -Y <username>@rackham.uppmax.uu.se\n```\nOnce connected, start an interactive session:\n\n```bash\ninteractive -A naiss2023-22-1345 -p core -n 5 -t 08:00:00\n```\n\n::: {.callout-important}\nRun the `interactive` command above only **ONCE** per day at the beginning of the practical session.\n:::\n\nThis command will connect you to a node with 5 cores for a duration of 8 hours. You can check the *node name* under the `NODELIST` column in the output of the following command: \n\n```bash\nsqueue -u <username>\n```\n\nIf you are disconnected from the interactive session, you can re-connect to your node with the following command:\n\n```bash\nssh -Y <nodename>\n```\n\n### Launch RStudio\n\n::: {.callout-tip}\nTo avoid running out of memory, restart R (_Session > Restart R_) after each lab.\n:::\n\n#### Seurat\n\nTo launch RStudio server and run the `Seurat` labs perform the following steps:\n\n```bash\ncd /path/to/labs  # replace this with the full path to the workshop compiled lab folder\n/sw/courses/scrnaseq/singularity/launch_rstudio.sh /sw/courses/scrnaseq/singularity/2024-seurat-r4.3.0.sif\n```\n\n#### Bioconductor\n\nTo launch RStudio server and run the `Bioconductor` labs perform the following steps:\n\n```bash\ncd /path/to/labs  # replace this with the full path to the workshop compiled lab folder\n/sw/courses/scrnaseq/singularity/launch_rstudio.sh /sw/courses/scrnaseq/singularity/2024-bioconductor-r4.3.0.sif\n```\n\n### Connect to RStudio\n\nAfter executing the `launch_rstudio.sh` script, a message with **your** login credentials will be printed to your screen, and it looks similar to the one below.\n\n::: {.callout-important}\nDo not close this terminal!\n:::\n\n```\n        *************************************************\n        *                                               *\n        *  IMPORTANT: Do not close or exit this shell!  *\n        *                                               *\n        *************************************************\n\n1. SSH tunnel from your workstation using the following command:\n\n   ssh -N -L 8787:r483.uppmax.uu.se:58359 susanner@rackham3.uppmax.uu.se\n\n   and point your web browser to http://localhost:8787\n\n2. log in to RStudio Server using the following credentials:\n\n   user: susanner\n   password: scrnaseq\n\nWhen done using RStudio Server, terminate the job by:\n\n1. Exit the RStudio Session (\"power\" button in the top right corner of the RStudio window).\n2. Issue the following command in both shells:\n\n      CTRL-C\n```\n\nFollow the instructions printed on the screen to launch the RStudio Server. Open a shell *locally* and run *your* `ssh` command from step 1. Then open [localhost:8787](localhost:8787) in your web browser and log in to the RStudio Server using **your** `username` and `password` provided in step 2.\n\n### Launch JupyterLab\n\n#### Scanpy\n\nTo launch JupyterLab and run the **Scanpy** labs using Jupyter notebooks perform the following steps:\n\n::: {.callout-tip}\nTo avoid running out of memory, restart the kernel (_Kernel > Restart Kernel_) after each lab.\n:::\n\n```bash\ncd /path/to/labs  # replace this with the full path to the workshop compiled lab folder\n/sw/courses/scrnaseq/singularity/launch_jupyter.sh /sw/courses/scrnaseq/singularity/2024-scanpy-py3.10.sif\n```\n\n### Connect to JupyterLab\n\nAfter executing the `launch_jupyter.sh` script, a message with *your* login credentials will be printed to your screen, and it looks similar to the one below.\n\n::: {.callout-important}\nDo not close this terminal!\n:::\n\n```\n        *************************************************\n        *                                               *\n        *  IMPORTANT: Do not close or exit this shell!  *\n        *                                               *\n        *************************************************\n\n1. SSH tunnel from your workstation using the following command:\n\n   ssh -N -L 8888:r483.uppmax.uu.se:34968 susanner@rackham1.uppmax.uu.se\n\n   point your web browser to http://localhost:8888/lab\n\n2. Log in to JupyterLab using the password:\n\n   scrnaseq\n\nWhen done using JupyterLab, terminate the job by:\n\n1. Shut down all kernels.\n2. Issue the following command in both shells:\n\n   CTRL-C\n```\n\nFollow the instructions to launch the JupyterLab. Open a shell **locally** and run **your** `ssh` command from step 1. Then open [localhost:8888/lab](localhost:8888/lab) in your web browser and log in to the JupyterLab using the password provided in step 2.\n\n## **Option B:** Run Docker Locally\n\n### Local Setup\n\nCreate a new directory at a suitable location. Now you can fetch the scripts for the labs. You can either download individual `.qmd` or `.ipynb` files from the [Contents](/home_contents.html) page or clone the whole repo. If you clone the repo, navigate to `compiled/labs` to work on labs.\n\n```bash\ngit clone --depth 1 --single-branch --branch master https://github.com/nbisweden/workshop-scRNAseq.git\ncd workshop-scRNAseq/compiled/labs\n```\n\nIf the `git` command is not available, you can simply go to <https://github.com/NBISweden/workshop-scRNAseq> and download the repo as a zip file and unzip it in a suitable location.\n\n\n## Images\n\nSeparate Docker images are made available for `Seurat`, `Bioconductor` and `Scanpy` toolkits. An additional set of images are available for spatial analyses. All images follow the `registry/username/image:tag` convention. The image is always `ghcr.io/nbisweden/workshop-scrnaseq`. Add the appropriate tag based on the lab you are running.\n\nAn overview of the available docker images:\n\n|Topic|Image|\n|---|---|\n|Seurat|`2024-seurat-r4.3.0`|\n|Seurat spatial|`2024-seurat_spatial-r4.3.0`|\n|Bioconductor|`2024-bioconductor-r4.3.0`|\n|Bioconductor spatial|`2024-bioconductor_spatial-r4.3.0`|\n|Scanpy|`2024-scanpy-py3.10`|\n|Scanpy spatial|`2024-scanpy_spatial-py3.10`|\n\n### Seurat\n\n::: {.callout-tip}\nTo avoid running out of memory, restart R (_Session > Restart R_) after each lab.\n:::\n\n```bash\ncd /path/to/labs  # replace this with the full path to the workshop compiled lab folder\ndocker pull --platform=linux/amd64 ghcr.io/nbisweden/workshop-scrnaseq:2024-seurat-r4.3.0\ndocker run --rm -ti -p 8787:8787 -e PASSWORD=scrnaseq -v ${PWD}:/home/rstudio/workdir ghcr.io/nbisweden/workshop-scrnaseq:2024-seurat-r4.3.0\n```\n\nIn the browser, go to [localhost:8787](localhost:8787).  \nUse the following credentials to log in to the RStudio Server:  \n\n> User: `rstudio`  \n> Password: `scrnaseq`\n\nNavigate to `/home/rstudio/workdir/` and open qmd files\n\n::: {layout-ncol=\"2\"}\n\n![RStudio login screen](assets/rstudio-login.jpg)\n\n![RStudio preview](assets/rstudio-preview.jpg)\n\n:::\n\n### Bioconductor\n\n::: {.callout-tip}\nTo avoid running out of memory, restart R (_Session > Restart R_) after each lab.\n:::\n\n```bash\ncd /path/to/labs  # replace this with the full path to the workshop compiled lab folder\ndocker pull --platform=linux/amd64 ghcr.io/nbisweden/workshop-scrnaseq:2024-bioconductor-r4.3.0\ndocker run --rm -ti -p 8787:8787 -e PASSWORD=scrnaseq -v ${PWD}:/home/rstudio/workdir ghcr.io/nbisweden/workshop-scrnaseq:2024-bioconductor-r4.3.0\n```\n\nIn the browser, go to [localhost:8787](localhost:8787). Use the following credentials to log in to the RStudio Server:  \n\n> User: `rstudio`  \n> Password: `scrnaseq`\n\nNavigate to `/home/rstudio/workdir/` and open qmd files\n\n::: {.callout-important}\nDo not close this terminal.\n:::\n\n### Scanpy\n\n::: {.callout-tip}\nTo avoid running out of memory, restart the kernel (_Kernel > Restart Kernel_) after each lab.\n:::\n\n```bash\ncd /path/to/labs  # replace this with the full path to the workshop compiled lab folder\ndocker pull --platform=linux/amd64 ghcr.io/nbisweden/workshop-scrnaseq:2024-scanpy-py3.10\ndocker run --rm -ti -p 8888:8888 -v ${PWD}:/home/jovyan/workdir ghcr.io/nbisweden/workshop-scrnaseq:2024-scanpy-py3.10\n```\n\nAt the end of the prompt, you will see a URL that starts with `http://127.0.0.1`, similar to the one below:\n\n```\nhttp://127.0.0.1:8888/lab?token=0a1d9ec51b91528a1d1fe2ad2c74f59ecb94c47070c2911d\n```\n\nNote that your token value will be different. Copy the entire URL (with the token) and paste it in your browser. \n\n::: {.callout-important}\nDo not close this terminal.\n:::\n\n::: {layout-ncol=\"2\"}\n\n![Jupyter home](assets/jupyter-home.jpg)\n\n![Jupyter preview](assets/jupyter-preview.jpg)\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}