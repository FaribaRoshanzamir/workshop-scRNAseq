---
title: FAQ
date: ""
author: ""
code-tools: false
format: html
description: Troubleshooting for common errors you might face during installations or during execution of softwares.
---

## Command line developer tools not found {{< fa brands apple >}}

If you don't yet have Mac OSX command line developer tools, please install it using:

```
xcode-select --install
```

## Error - umap-learn not found, or other python packages {{< fa brands r-project >}}

If your R does not find the correct python version, it will complain that `umap-learn` is not installed and ask you to install it. Here are some tips on how to find the correct python version that was installed in the conda environment.

Try selecting the correct conda env in R

In this example the conda environment is named `scRNAseq2021`.

```
library(reticulate)
reticulate::use_conda("scRNAseq2021")
```

Then check what python you have in R:

```
reticulate::py_config()
# should read at top:
python:         /Users/asbj/miniconda3/envs/scRNAseq2021/bin/python
```

If that still is not right, you may have an `r-reticulate` python installation as well and need to perform the steps below.

Restart R and select python version

OBS! Before doing anything else you need to select python version.

First, find out what path you have to your conda python (in TERMINAL):

```
which python
/Users/asbj/miniconda3/envs/scRNAseq2021/bin/python
```

Then in R (after restarting):

```
reticulate::use_python("/Users/asbj/miniconda3/envs/scRNAseq2021/bin/python", required=T)
```

Then check again with `py_config` if correct version of python is used:

```
reticulate::py_config()
```

If you have the correct version now, you should be able to run UMAP without issues.

## Unable to load stringi.so {{< fa brands windows >}} {{< fa brands ubuntu >}}  

You can install stringi in R using:

```
install.packages('stringi')
```

## ERROR: Failed building wheel for gevent / MacOSX10.9.sdk missing {{< fa brands apple >}}  

This is a problem with the MacOSX compiler, in which conda is unable to find it.

```
#Download MacOSX10.9.sdk from Github
curl -o MacOSX10.9.sdk.tar.gz "https://github.com/phracker/MacOSX-SDKs/releases/download/11.3/MacOSX10.9.sdk.tar.xz"

#extract
sudo tar -xzf MacOSX10.9.sdk.tar.xz

#copy
sudo cp -r MacOSX10.9.sdk /opt/

#give executable permissions
sudo chmod -R a+rX /opt

#Link the path where conda looks to where the file is
ln -s /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk /opt/MacOSX10.9.sdk
```

## ERROR: option error has NULL value {{< fa brands r-project >}}  

This error happens when running code inline.

One possible solution is to restart Rstudio and type.

```
if(interactive()) { options(error = utils::recover)}
```

Please try other solutions listed here: https://github.com/rstudio/rstudio/issues/4723

If none of those work, you can click on the wheel engine symbol and check `Chunk output in console` 

## R crashes due to memory issues {{< fa brands r-project >}}  

If R crashes due to memory issues, it may be a good idea to increase the vector size `R_MAX_VSIZE`. Put in the file `.Renviron` either in your home directory or the folder you are launching Rstudio from:

```
R_MAX_VSIZE=70Gb
```
Or to whatever value matches your computer, the default size is 16Gb.

***
